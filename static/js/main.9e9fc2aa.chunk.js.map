{"version":3,"sources":["menuItems.js","components/Dropdown.js","components/MenuItems.js","components/Navbar.js","components/Header.js","components/Layout.js","pages/Home.js","pages/AI/About.js","pages/WebDesign.js","pages/SEO.js","pages/Services.js","pages/Frontend.js","pages/PHP.js","pages/Node.js","pages/AboutWho.js","pages/OurValues.js","pages/WebDev.js","pages/Lecture/Intro/intro.js","pages/Lecture/ML/ml.js","pages/Lecture/DL/dl_1.js","pages/Lecture/DL/dl_2.js","pages/Lecture/DL/dl_3.js","pages/AI/ai.js","pages/AI/ch1.js","pages/Programs/MLP/P1_Basics_of_MLP.js","pages/Programs/MLP/P1_1_regression.js","pages/neurocomputing/ch1/ch1_1.js","pages/neurocomputing/ch1/ch1_2.js","pages/neurocomputing/ch1/ch1_3.js","pages/neurocomputing/ch2/ch2_1.js","pages/neurocomputing/ch2/ch2_2.js","pages/neurocomputing/ch2/ch2_3.js","pages/AI/ai_ref.js","components/App.js","index.js"],"names":["menuItems","title","url","submenu","Dropdown","_ref","submenus","dropdown","depthLevel","dropdownClass","React","createElement","className","concat","map","index","MenuItems","items","key","setDropdown","useState","ref","useRef","useEffect","handler","event","current","contains","target","document","addEventListener","removeEventListener","onMouseEnter","window","innerWidth","onMouseLeave","onClick","closeDropdown","Fragment","type","aria-haspopup","aria-expanded","prev","Link","to","Navbar","menu","Header","Layout","Outlet","Home","About","WebDesign","SEO","Services","Frontend","PHP","Node","AboutWho","OurValues","WebDev","Intro","Contents","src","width","alt","SyntaxHighlighter","language","style","docco","showLineNumbers","ML","DL_1","DL_2","DL_3","AI","CH1","p1_Basics_of_MLP","defaultStyle","P1_1_regression","ch1_1","ch1_2","ch1_3","ch2_1","ch2_2","ch2_3","Ch0","href","rel","App","Routes","Route","path","element","AI_Ref","P1_Basics_of_MLP","Ch1_1","Ch1_2","Ch1_3","Ch2_1","Ch2_2","Ch2_3","ReactDOM","createRoot","getElementById","render","StrictMode","BrowserRouter","basename","process"],"mappings":"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","file":"static/js/main.9e9fc2aa.chunk.js","sourcesContent":["export const menuItems = [\n  {\n    title: 'Home',\n    url: '/',\n    submenu: [\n      {\n        title: 'Home',\n        url: '/',\n      }\n    ]\n  },\n  { title: \"Ai Lecture\", url: \"#\", \n    submenu: [ \n      {title: \"1. Intoduction\",\n        submenu: [\n          {title: '1. 설명', url: '/Lecture/Intro/intro',},  \n          {title: \"1. Basics_of_MLP\", url: \"\",},\n          {title: \"1.1 regression\", url: \"\",},\n          {title: \"MLP\", url: \"\",},\n        ]\n      },\n      {title: \"2. Deep Learning\",\n        submenu: [\n          {title: '1. DL(소개)', url: '/Lecture/DL/dl_1',},\n          {title: '2. DL(CNN)', url: '/Lecture/DL/dl_2',},\n          {title: '3. DL(RNN)', url: '/Lecture/DL/dl_3',}, \n          {title: \"MLP\", url: \"\",},\n          {title: \"MLP\", url: \"\",},\n          {title: \"MLP\", url: \"\",},\n        ]\n      },\n      {title: \"3. Machine Learning\",\n        submenu: [\n          {title: '1. ML', url: '/Lecture/ML/ml',},\n          {title: \"MLP\", url: \"\",},\n          {title: \"MLP\", url: \"\",},\n          {title: \"MLP\", url: \"\",},\n        ]\n      },\n    ], \n  },\n\n  // AI\n\t{title: \"AI/ML/DL\", url: '/',\n    submenu: [ \n      {title: '1. AI', url: '/AI/ai',},\n      {title: 'about2', url: '/AI/ch1',},    \n    ], \n  }, \n\n  //Program\n  {title: \"Program\", url: \"\", \n    submenu: [ \n      {title: \"1. MLP\",\n        submenu: [\n          {title: \"1. Basics_of_MLP\", url: \"/Programs/MLP/P1_Basics_of_MLP\",},\n          {title: \"1.1 regression\", url: \"/Programs/MLP/P1_1_regression\",},\n          {title: \"MLP\", url: \"\",},\n        ]\n      },\n      {title: \"2. CNN\",\n      submenu: [\n          {title: \"MLP\", url: \"\",},\n          {title: \"MLP\", url: \"\",},\n          {title: \"MLP\", url: \"\",},\n        ]\n      },\n      {title: \"3. RNN\",\n      submenu: [\n          {title: \"MLP\", url: \"\",},\n          {title: \"MLP\", url: \"\",},\n          {title: \"MLP\", url: \"\",},\n        ]\n      },\n      {title: \"4. Unsupervised Learning\",\n      submenu: [\n          {title: \"MLP\", url: \"\",},\n          {title: \"MLP\", url: \"\",},\n          {title: \"MLP\", url: \"\",},\n        ]\n      },\n      {title: \"5. ETC\",\n      submenu: [\n          {title: \"MLP\", url: \"\",},\n          {title: \"MLP\", url: \"\",},\n          {title: \"MLP\", url: \"\",},\n        ]\n      },\n      {title: \"6. Examples\",\n      submenu: [\n          {title: \"MLP\", url: \"\",},\n          {title: \"MLP\", url: \"\",},\n          {title: \"MLP\", url: \"\",},\n        ]\n      },\n      {title: \"7. Text Analytics\",\n      submenu: [\n          {title: \"MLP\", url: \"\",},\n          {title: \"MLP\", url: \"\",},\n          {title: \"MLP\", url: \"\",},\n        ]\n      },\n    ], \n  }, \n  \n  // NeuroCompution\n\t{ title: \"NeuroCompution\", url: \"#\", \n    submenu: [ \n      {title: \"1. INTRODUCTION\", url: \"\",},\n      {title: \"1.1. Introduction\", url: \"/neurocomputing/ch1/ch1_1\",},\n      {title: \"1.2. Math basics\", url: \"/neurocomputing/ch1/ch1_2\",},\n      {title: \"1.2. Neurons\", url: \"/neurocomputing/ch1/ch1_3\",},\n      {title: \"2. LANEAR MODELS\", url: \"\",},\n      {title: \"2.1 Optimization\", url: \"/neurocomputing/ch2/ch2_1\",},\n      {title: \"2.2. Linear regression\", url: \"/neurocomputing/ch2/ch2_2\",},\n      {title: \"2.3. Regularization\", url: \"/neurocomputing/ch2/ch2_3\"}\n    ],   \n  },\n  { title: \"Ref\", url: \"#\", \n      submenu: [ \n        {title: '2. 참고자료', url: '/AI/ai_ref',},\n      ]\n  },\n];\n","import React  from 'react';\nimport MenuItems from './MenuItems';\nconst Dropdown = ({ submenus, dropdown, depthLevel }) => {\n  depthLevel = depthLevel + 1;\n  const dropdownClass = depthLevel > 1 ? 'dropdown-submenu' : '';\n  return (\n    <ul\n      className={`dropdown ${dropdownClass} ${\n        dropdown ? 'show' : ''\n      }`}\n    >\n      {submenus.map((submenu, index) => (\n        <MenuItems\n          items={submenu}\n          key={index}\n          depthLevel={depthLevel}\n        />\n      ))}\n    </ul>\n  );\n};\n\nexport default Dropdown;\n","import React  from 'react';\nimport { useState, useEffect, useRef } from 'react';\nimport Dropdown from './Dropdown';\n\nimport { Link } from 'react-router-dom';\n\nconst MenuItems = ({ items, depthLevel }) => {\n  const [dropdown, setDropdown] = useState(false);\n\n  let ref = useRef();\n\n  useEffect(() => {\n    const handler = (event) => {\n      if (\n        dropdown &&\n        ref.current &&\n        !ref.current.contains(event.target)\n      ) {\n        setDropdown(false);\n      }\n    };\n    document.addEventListener('mousedown', handler);\n    document.addEventListener('touchstart', handler);\n    return () => {\n      // Cleanup the event listener\n      document.removeEventListener('mousedown', handler);\n      document.removeEventListener('touchstart', handler);\n    };\n  }, [dropdown]);\n\n  const onMouseEnter = () => {\n    window.innerWidth > 960 && setDropdown(true);\n  };\n\n  const onMouseLeave = () => {\n    window.innerWidth > 960 && setDropdown(false);\n  };\n\n  const closeDropdown = () => {\n    dropdown && setDropdown(false);\n  };\n\n  return (\n    <li\n      className=\"menu-items\"\n      ref={ref}\n      onMouseEnter={onMouseEnter}\n      onMouseLeave={onMouseLeave}\n      onClick={closeDropdown}\n    >\n      {items.url && items.submenu ? (\n        <>\n          <button\n            type=\"button\"\n            aria-haspopup=\"menu\"\n            aria-expanded={dropdown ? 'true' : 'false'}\n            onClick={() => setDropdown((prev) => !prev)}\n          >\n            {window.innerWidth < 960 && depthLevel === 0 ? (\n              items.title\n            ) : (\n              <Link to={items.url}>{items.title}</Link>\n            )}\n\n            {depthLevel > 0 &&\n            window.innerWidth < 960 ? null : depthLevel > 0 &&\n              window.innerWidth > 960 ? (\n              <span>&raquo;</span>\n            ) : (\n              <span className=\"arrow\" />\n            )}\n          </button>\n          <Dropdown\n            depthLevel={depthLevel}\n            submenus={items.submenu}\n            dropdown={dropdown}\n          />\n        </>\n      ) : !items.url && items.submenu ? (\n        <>\n          <button\n            type=\"button\"\n            aria-haspopup=\"menu\"\n            aria-expanded={dropdown ? 'true' : 'false'}\n            onClick={() => setDropdown((prev) => !prev)}\n          >\n            {items.title}{' '}\n            {depthLevel > 0 ? (\n              <span>&raquo;</span>\n            ) : (\n              <span className=\"arrow\" />\n            )}\n          </button>\n          <Dropdown\n            depthLevel={depthLevel}\n            submenus={items.submenu}\n            dropdown={dropdown}\n          />\n        </>\n      ) : (\n        <Link to={items.url}>{items.title}</Link>\n      )}\n    </li>\n  );\n};\n\nexport default MenuItems;\n","import React  from 'react';\nimport { menuItems } from '../menuItems';\nimport MenuItems from './MenuItems';\nconst Navbar = () => {\n  return (\n    <nav>\n      <ul className=\"menus\">\n        {menuItems.map((menu, index) => {\n          const depthLevel = 0;\n          return (\n            <MenuItems\n              items={menu}\n              key={index}\n              depthLevel={depthLevel}\n            />\n          );\n        })}\n      </ul>\n    </nav>\n  );\n};\n\nexport default Navbar;\n","import React  from 'react';\nimport Navbar from './Navbar';\n// ...\nimport { Link } from 'react-router-dom';\n\nconst Header = () => {\n  return (\n    <header>\n      <div className=\"nav-area\">\n        <Link to=\"/\" className=\"logo\">\n          Envi. Ai\n        </Link>\n        <Navbar />\n      </div>\n    </header>\n  );\n};\n\nexport default Header;\n","import React  from 'react';\nimport { Outlet } from 'react-router-dom';\nimport Header from './Header';\n\nconst Layout = () => {\n  return (\n    <div>\n      <Header />\n      <div className=\"content\">\n        <Outlet />\n      </div>\n    </div>\n  );\n};\n\nexport default Layout;","import React  from 'react';\n\nconst Home = () => {\n  return (\n    <>\n       <h1 className='home' >Artificial Intelligence</h1>\n    </>\n\t);\n};\n\nexport default Home;\n","import React  from 'react';\n\nconst About = () => {\n  return <h2>Who we are</h2>;\n};\n\nexport default About;\n","import React  from 'react';\n\nconst WebDesign = () => {\n  return <h2>Web design content</h2>;\n};\n\nexport default WebDesign;\n","import React  from 'react';\n\nconst SEO = () => {\n  return <h2>Search engine optimization</h2>;\n};\n\nexport default SEO;\n","import React  from 'react';\nimport { Link } from 'react-router-dom';\n\nconst Services = () => {\n  return (\n    <>\n      <h2>Services page</h2>\n\n      <Link to=\"/web-design\">Web design</Link>\n      <Link to=\"/seo\">Seo</Link>\n    </>\n  );\n};\n\nexport default Services;\n","import React  from 'react';\n\nconst Frontend = () => {\n  return <h2>Frontend</h2>;\n};\n\nexport default Frontend;\n","import React  from 'react';\n\nconst PHP = () => {\n  return <h2>PHP</h2>;\n};\n\nexport default PHP;\n","import React  from 'react';\n\nconst Node = () => {\n  return <h2>Node</h2>;\n};\n\nexport default Node;\n","import React  from 'react';\n\nconst AboutWho = () => {\n  return <h2>Who we are</h2>;\n};\n\nexport default AboutWho;\n","import React  from 'react';\n\nconst OurValues = () => {\n  return <h2>Our values</h2>;\n};\n\nexport default OurValues;\n","import React from 'react';\n\nconst WebDev = () => {\n  return <h2>Web development content</h2>;\n};\n\nexport default WebDev;\n","import React from 'react';\r\nimport SyntaxHighlighter from \"react-syntax-highlighter\";\r\nimport { docco } from 'react-syntax-highlighter/dist/esm/styles/hljs';\r\n\r\n\r\nfunction Intro() {\r\n\treturn (\r\n    <>\r\n      <div>\r\n          <Contents />\r\n      </div>\r\n    </>\r\n\t);\r\n};\r\n\r\nexport default Intro;\r\n\r\nfunction Contents() {\r\n\tconst title = 'Intro';\r\n\r\n\treturn (\r\n\t\t<>\r\n\t\t\t<h1>{title}</h1>\r\n\r\n\t\t\t<hr className='class-1'/>\r\n\r\n\t\t\t<h3 className='h5style'><b><u>우리가 하고자 하는 것 ?</u></b></h3>\t\r\n\t\t\t<ul>\r\n\t\t\t\t<li>어떤 <u>자료</u>로 부터 필요한 <u>정보</u>를 <u>자동</u>으로 알아내는 것</li>\r\n\t\t\t\t<li><u>자료</u> : 숫자, 그림, 문서, 소리, 동영상, ...</li>\r\n\t\t\t\t<li><u>정보</u> : 숫자, 그림, 문서, 소리, 동영상, ...</li>\r\n\t\t\t\t<li><u>자동</u> : 인공지능(DL, ML ... ) </li>\r\n\t\t\t</ul>\r\n\r\n\t\t\t<hr className='class-1'/>\r\n\r\n\t\t\t<h3 className='h5style'><b><u>가장 간단한 문제</u></b></h3>\t\r\n\t\t\t<ul>\r\n\t\t\t\t<li>자료들에 포함 되어 있는 규칙을 찾고 이들 관계를 수식으로 표현한다.</li>\r\n\t\t\t\t<li>예: 공부 시간과 점수</li>\r\n\t\t\t\t<img src=\"../../images/Lecture/Intro/1.PNG\" width={'400'} alt=''/><br/>\r\n\t\t\t\t<img src=\"../../images/Lecture/Intro/2.PNG\" width={'400'} alt=''/><br/>\r\n\t\t\t\t<li>최소자승법(Method of Least Squares)</li>\r\n\t\t\t\t<img src=\"../images/Lecture/Intro/3.PNG\" width={'200'} alt=''/><br/>\r\n\t\t\t\t<li>최소자승법을 사용하지 않고 컴퓨터가 스스로(?) 찾아낸다.</li>\r\n\t\t\t</ul>\r\n\r\n\t\t\t<hr className='class-1'/>\r\n\r\n\t\t\t<h3 className='h5style'><b><u>H(x) = Wx + b</u></b></h3>\t\r\n\t\t\t<ul>\r\n\t\t\t\t<li>input, 입력층, 수용층</li>\r\n\t\t\t\t<li>연합층</li>\r\n\t\t\t\t<li>output, 출력층, 반응층</li>\r\n\t\t\t\t<li>Weight, 가중치, 기울기</li>\r\n\t\t\t\t<li>Hypothesis(가설)</li>\r\n\t\t\t\t<li>Bias, 편향, 절편값</li>\r\n\t\t\t\t<li></li>\r\n\t\t\t\t<li><li><img src=\"../../images/Lecture/Intro/6.PNG\" width={'400'} alt=''/><br/></li></li>\r\n\t\t\t</ul>\r\n\r\n\t\t\t<hr className='class-1'/>\r\n\t\t\t<h3 className='h5style'><b><u>퍼셉트론(perceptron)</u></b></h3>\t\r\n\t\t\t<ul>\r\n\t\t\t\t<li><img src=\"../../images/Lecture/Intro/7.PNG\" width={'400'} alt=''/><br/></li>\r\n\t\t\t\t<li></li>\r\n\t\t\t\t<li></li>\r\n\t\t\t\t<li></li>\r\n\t\t\t\t<li></li>\r\n\t\t\t\t<li></li>\r\n\t\t\t</ul>\t\t\r\n\t\t\t\t\r\n\t\t\t<hr className='class-1'/>\r\n\t\t\t<h3 className='h5style'><b><u>활성화 함수(Activation Function)</u></b></h3>\t\r\n\t\t\t<ul>\r\n\t\t\t\t<li><img src=\"../../images/Lecture/Intro/8.PNG\" width={'400'} alt=''/><br/></li>\r\n\t\t\t\t<li></li>\r\n\t\t\t\t<li></li>\r\n\t\t\t\t<li></li>\r\n\t\t\t\t<li>회귀 문제: 일반적으로 활성화 함수를 사용하지 않는다. 예측값을 그대로 사용하면 되기 때문.</li>\r\n\t\t\t\t<li>시그모이드(Sigmoid) 함수, 렐루(ReLU) 함수, 항등 함수, 소프트맥스 등 여러 종류</li>\r\n\t\t\t\t<li><img src=\"../images/AI/8.PNG\" width={'500'} alt=''/><br/></li>\r\n\t\t\t</ul>\r\n\r\n\t\t\t<hr className='class-1'/>\r\n\t\t\t<h3 className='h5style'><b><u>Cost function(=Loss function)</u></b></h3>\t\r\n\t\t\t<ul>\r\n\t\t\t\t<li> 실제 데이터와 우리의 가설이 나타내는 데이터의 거리를</li>\r\n\t\t\t\t<li><img src=\"../../images/Lecture/Intro/4.PNG\" width={'300'} alt=''/><br/></li>\r\n\t\t\t\t<li><img src=\"../../images/Lecture/Intro/5.PNG\" width={'400'} alt=''/><br/></li>\r\n\t\t\t\t<li></li>\r\n\t\t\t\t<li></li>\r\n\t\t\t</ul>\r\n\t\t\t\t\t\t\r\n\t\t\t<hr className='class-1'/>\r\n\t\t\t<h3 className='h5style'><b><u>데이터마이닝(data mining)</u></b></h3>\t\r\n\t\t\t<ul>\r\n\t\t\t\t<li>자료채굴</li>\r\n\t\t\t\t<li>대규모로 저장된 데이터안에서 체계적이고 자동적으로 통계적규칙이나 짜임을 분석하여, 가치있는 정보를 빼내는 과정이다.</li>\r\n\t\t\t\t<li>데이터에서 어떤 의미있는 값을 알아내는 것(knowledge-discovery in databases)라고도 한다.</li>\r\n\t\t\t\t<li></li>\r\n\t\t\t\t<li></li>\r\n\t\t\t\t<li></li>\r\n\t\t\t</ul>\r\n\r\n\t\t\t<hr className='class-1'/>\r\n\t\t\t<h3 className='h5style'><b><u>Classification과 Regression</u></b></h3>\t\r\n\t\t\t<ul>\r\n\t\t\t\t<li>Classification(분류)과 Regression(회귀) 알고리즘은 supervised learning(지도 학습) 알고리즘</li>\r\n\t\t\t\t<li>레이블이 지정된 데이터셋 이용</li>\r\n\t\t\t\t<li>\r\n\t\t\t\t\tregression(회귀)\r\n\t\t\t\t\t<ul>\r\n\t\t\t\t\t\t<li>continuous한 value를 예측</li>\r\n\t\t\t\t\t\t<li>종속변수와 독립변수 사이의 상관관계를 찾습니다. </li>\r\n\t\t\t\t\t\t<li>입력 변수 \"x\"를 연속 출력 변수 \"y\"에 매핑할 수 있는 매핑 함수를 찾는 알고리즘</li>\r\n\t\t\t\t\t\t<li></li>\r\n\t\t\t\t\t</ul>\r\n\t\t\t\t</li>\r\n\t\t\t\t\r\n\t\t\t\t<li>\r\n\t\t\t\t\tclassification\r\n\t\t\t\t\t<ul>\r\n\t\t\t\t\t\t<li>discrete한 value를 예측/분류</li>\r\n\t\t\t\t\t\t<li>매개변수를 기반으로 데이터 세트를 클래스로 나누는 데 도움이 되는 함수를 찾는 알고리즘</li>\r\n\t\t\t\t\t\t<li> \"x\" 입력을 \"y\" 이산 출력에 매핑하는 매핑 함수</li>\r\n\t\t\t\t\t\t<li>이진 분류 (Binary classification): 예/아니오로 구분</li>\r\n\t\t\t\t\t\t<li>다중 분류 (Multi-class classification):입력 text가 어느 언어인지 분류</li>\r\n\t\t\t\t\t</ul>\r\n\t\t\t\t</li>\r\n\t\t\t\t<li></li>\r\n\t\t\t\t<li><img src=\"../../images/Lecture/Intro/11.PNG\" width={'400'} alt=''/><br/></li>\r\n\t\t\t</ul>\r\n\r\n\t\t\t<hr className='class-1'/>\r\n\t\t\t<h3 className='h5style'><b><u>tf.keras.layers.Dense</u></b></h3>\t\r\n\r\n\t\t\t<b><u>예제1</u></b>\r\n\t\t\t<div>\r\n\t\t\t<SyntaxHighlighter language=\"python\" style={docco} showLineNumbers={true}>\r\n\t\t\t\t{`\r\nmodel = tf.keras.models.Sequential()\r\nmodel.add(tf.keras.Input(shape=(4,)))\r\nmodel.add(tf.keras.layers.Dense(16, activation='relu'))\r\nmodel.add(tf.keras.layers.Dense(32))\r\n\r\nprint(model.output_shape)\r\n\r\n(None, 32)\r\n\t\t\t\t`}\r\n    \t</SyntaxHighlighter>\r\n\t\t\t</div>\r\n\r\n\t\t\t<ul>\r\n\t\t\t\t<li>tf.keras.Sequential()는 여러 층을 순서대로 쌓아서 신경망 모델을 구성합니다.</li>\r\n\t\t\t\t<li>tf.keras.Sequential()는 여러 층을 순서대로 쌓아서 신경망 모델을 구성합니다.</li>\r\n\t\t\t\t<li>데이터에서 어떤 의미있는 값을 알아내는 것(knowledge-discovery in databases)라고도 한다.</li>\r\n\t\t\t\t<li>예제에서는 입력층과 두 개의 Dense 층을 이용해서 하나의 신경망 모델을 구성했습니다.</li>\r\n\t\t\t\t<li>첫번째 인자는 출력의 개수입니다.</li>\r\n\t\t\t\t<li>activation은 활성화 함수 (Activation function)를 지정합니다.</li>\r\n\t\t\t</ul>\r\n\r\n\t\t\t<b><u>예제2</u></b>\r\n\t\t\t<SyntaxHighlighter language=\"python\" style={docco} showLineNumbers={true}>\r\n\t\t\t\t{`\r\nimport tensorflow as tf\r\nmodel = tf.keras.Sequential()\r\nmodel.add(tf.keras.Input(shape=(4,)))\r\nmodel.add(tf.keras.layers.Dense(16, activation='relu', use_bias=True))\r\nmodel.add(tf.keras.layers.Dense(64, activation='relu', use_bias=False))\r\nmodel.add(tf.keras.layers.Dense(32))\r\n\r\nweights = model.get_weights()\r\n\r\nprint(len(weights))\r\n\r\n## Weight matrix\r\nprint(weights[0])\r\nprint(weights[0].shape)\r\nprint(weights[2])\r\nprint(weights[2].shape)\r\nprint(weights[3])\r\nprint(weights[3].shape)\r\n\r\n## Bias\r\nprint(weights[1])\r\nprint(weights[1].shape)\r\nprint(weights[4])\r\nprint(weights[4].shape)\r\n\r\n(None, 32)\r\n\t\t\t\t`}\r\n    \t</SyntaxHighlighter>\r\n\t\t\t<ul>\r\n\t\t\t\t<li>use_bias는 신경망에서 bias 파라미터를 사용할지 여부를 지정합니다.</li>\r\n\t\t\t\t<li>get_weights() 메서드를 사용해서 모델의 weight를 얻어보면,</li>\r\n\t\t\t\t<li>weights[0], weights[2], weights[3]은 각각 (4, 16), (16, 64), (64, 32) 형태의 weight matrix이고,</li>\r\n\t\t\t\t<li>weights[1], weights[4]는 (16,), (32,) 형태의 bias 값임을 알 수 있습니다.</li>\r\n\t\t\t</ul>\r\n\r\n\t\t\t<hr className='class-1'/>\r\n\t\t\t<h3 className='h5style'><b><u>[Tensorflow] 간단한 인공지능 모델 생성 및 확인</u></b></h3>\t\r\n\r\n\t\t\t<b><u>전체 코드</u></b>\r\n\t\t\t<SyntaxHighlighter language=\"python\" style={docco} showLineNumbers={true}>\r\n\t\t\t\t{`\r\nimport tensorflow as tf\r\n\r\nmnist = tf.keras.datasets.mnist\r\n\r\n(x_train, y_train), (x_test, y_test) = mnist.load_data()\r\nx_train, x_test = x_train / 255.0, x_test / 255.0\r\n\r\nmodel = tf.keras.models.Sequential([\r\n  tf.keras.layers.Flatten(input_shape=(28, 28)),\r\n  tf.keras.layers.Dense(128, activation='relu'),\r\n  tf.keras.layers.Dropout(0.2),\r\n  tf.keras.layers.Dense(10, activation='softmax')\r\n])\r\n# model.summary()\r\n\r\nmodel.compile(optimizer='adam',\r\n              loss='sparse_categorical_crossentropy',\r\n              metrics=['accuracy'])\r\n\r\nmodel.fit(x_train, y_train, epochs=5)\r\n\r\n\r\nscores  = model.evaluate(x_test,  y_test, verbose=2)\r\nprint(\"정확도 : %.2f %%\" % (scores[1]*100))\r\n\r\n\t\t\t`}\r\n\t\t\t</SyntaxHighlighter>\r\n\t\t\t<b><u>코드 설명</u></b>\r\n\t\t\t<ul>\r\n\t\t\t\t<li>2. 위 코드는 텐서플로우 라이브러리를 불러오고, 라이브러리 이름을 tf라고 칭한다는 뜻입니다.</li>\r\n\t\t\t\t<li>4. tensorflow 에서 제공하는 데이터 셋인 mnist 를 불러온다, 손글씨 숫자에 관한 이미지 데이터 셋</li>\r\n\t\t\t\t<li>\r\n\t\t\t\t\t6. 위 코드는 데이터에서 객체의 데이터와 라벨값을 불러오는 코드\r\n\t\t\t\t\t<ul>\r\n\t\t\t\t\t\t<li>x_train : 손글씨 숫자 '이미지' 대입</li>\r\n\t\t\t\t\t\t<li>y_train : 이미지가 의미하는 숫자 대입(라벨값)</li>\r\n\t\t\t\t\t\t<li>x_test : 손글씨 숫자 '이미지' 대입</li>\r\n\t\t\t\t\t\t<li>y_test : 이미지가 의미하는 숫자 대입(라벨값)</li>\r\n\t\t\t\t\t\t<li><li><img src=\"../images/AI/9.PNG\" width={'400'} alt=''/><br/></li></li>\r\n\t\t\t\t\t</ul>\r\n\r\n\t\t\t\t</li>\r\n\t\t\t\t<li>7. 위 코드로 데이터 값을 0–1로 정규화합니다.(흑백으로 나누는 거죠)</li>\r\n\t\t\t\t<li>\r\n\t\t\t\t\t9. 모델을 구성\r\n\t\t\t\t\t<ul>\r\n\t\t\t\t\t\t<li>Sequential : 뉴럴네트워크 레이어를 생성</li>\r\n\t\t\t\t\t\t<li>Flatten(input_shape=(28, 28)) : 다차원 배열을 일차배열로 만들어 주는 것, 28 x 28 배열을 입력으로 받아 1차원 배열로 변환</li>\r\n\t\t\t\t\t\t<li>layers.Dense(128, activation='relu'), : 히든레이어의 노드개수는 128개, 활성화 함수는 relu\r\n\t\t\t\t\t\t\t이 레이어에서 입력은 가중치 값과 곱해지고 더해진다음, 학습이 진행되며 이 가중치 값이 수정되어 지며 정답을 찾아가는 것이다.\r\n\t\t\t\t\t\t</li>\r\n\t\t\t\t\t\t<li>layers.Dropout(0.2), : 오버피팅 방지한 것으로 이전레이어의 출력을 20% 0으로 만듭니다.</li>\r\n\t\t\t\t\t\t<li>layers.Dense(10, activation='softmax') : 숫자는 0부터 9까지 총 10개의 라벨값을 가지므로\r\n\t\t\t\t\t\t\t모델의 출력은 10개입니다.\r\n\t\t\t\t\t\t\t활성화 함수는 softmax로 다중 클래스 분류 문제의 출력층에서 주로 쓰이는 모델입니다.\r\n\r\n\t\t\t\t\t\t\t이 모델을 그림으로 표현하면 다음과 같습니다.</li>\r\n\t\t\t\t\t\t<li><img src=\"../images/AI/10.PNG\" width={'600'} alt=''/><br/></li>\r\n\t\t\t\t\t</ul>\r\n\t\t\t\t</li>\r\n\t\t\t\t<li>17. 모델을 컴파일 해줍니다</li>\r\n\t\t\t\t<li>21. Mnist 데이터 셋에서 훈련데이터 셋을 사용하고\r\n\t\t\t\t\tepochs를 5로 설정하여 모델을 5번 반복하여 훈련합니다.</li>\r\n\t\t\t</ul>\r\n\t\t\t<b><u>예제2</u></b>\r\n\r\n\r\n\t\t</>\r\n\t);\r\n}\t\r\n","import React from 'react';\r\nimport SyntaxHighlighter from \"react-syntax-highlighter\";\r\nimport { docco } from 'react-syntax-highlighter/dist/esm/styles/hljs';\r\n\r\n\r\nfunction ML() {\r\n\treturn (\r\n    <>\r\n      <div>\r\n          <Contents />\r\n      </div>\r\n    </>\r\n\t);\r\n};\r\n\r\nexport default ML;\r\n\r\nfunction Contents() {\r\n\tconst title = 'Machine Learning';\r\n\r\n\treturn (\r\n\t\t<>\r\n\t\t\t<h1>{title}</h1>\t\r\n\r\n\t\t\t<hr className='class-1'/>\r\n\t\t\t<h3 className='h5style'><b><u>머신러닝(ML, machine learning)</u></b></h3>\r\n\t\t\t\r\n\t\t\t<ul>\r\n\t\t\t\t<li><b><u>머신 러닝이란(What is Machine Learning?)</u></b></li>\r\n\t\t\t\t\t<ul>\r\n\t\t\t\t\t\t<li>기존의 프로그래밍 방식을 통해서는 해결하기 어려운 문제</li>\r\n\t\t\t\t\t\t<li>2017년에 있었던 DGIST의 딥 러닝 경진대회의 문제</li>\r\n\t\t\t\t\t\t<li><u>주어진 사진으로부터 고양이 사진인지 강아지 사진인지 판별</u></li>\r\n\t\t\t\t\t\t<li>사진을 보고 고양이, 강아지 판단는 사람에게는 쉬운 일입니다. </li>\r\n\t\t\t\t\t\t<li>사진는 각도, 조명, 고양이의 자세에 따라서 천차만별이라 사진으로부터 공통된 명확한 특징을 잡아내는 것은 쉽지 않다. </li>\r\n\t\t\t\t\t\t<img src=\"../images/AI/31.PNG\" width={'200'} alt=''/>\r\n\t\t\t\t\t\t<img src=\"../images/AI/32.PNG\" width={'200'} alt=''/>\r\n\t\t\t\t\t\t<img src=\"../images/AI/33.PNG\" width={'200'} alt=''/>\r\n\t\t\t\t\t\t<li>기존: 특징으로 판별하는 프로그램한다., 물론 특징은 사람이 찾아야 한다.</li>\r\n\t\t\t\t\t\t<img src=\"../images/AI/34.PNG\" width={'600'} alt=''/>\r\n\t\t\t\t\t\t<li>머신러닝: 기계가 스스로 데이터로부터 규칙성을 찾아 낸다.</li>\r\n\t\t\t\t\t\t<li></li>\r\n\t\t\t\t\t\t<li></li>\r\n\t\t\t\t\t</ul>\r\n\r\n\t\t\t\t<li>\r\n\t\t\t\t<hr className='class-1'/>\r\n\t\t\t\t\t<b><u>선형 회귀(Linear Regression)</u></b>\r\n\t\t\t\t\t<ul>\r\n\t\t\t\t\t\t<li>공부시간:성적, 운동량:몸무게 등 </li>\r\n\t\t\t\t\t\t<li>즉, 어떤값이 변하면(변수) 특정 값이 영향을 받는다.</li>\r\n\t\t\t\t\t\t<li>y = ax + b</li>\r\n\t\t\t\t\t\t<li>종속변수(y) = 기울기(a) * 독립변수(x) + 절편(b)</li>\r\n\t\t\t\t\t\t<li>y = wx + b</li>\r\n\t\t\t\t\t\t<li>종속변수(y) = 가중치(weight) * 독립변수(x) + 편향(bias)</li>\r\n\t\t\t\t\t\t<li>하나의 직선 이고, w, b 값에 따라서 x, y가 표현하는 직선은 무궁무진해집니다.</li>\r\n\t\t\t\t\t</ul>\r\n\t\t\t\t</li>\r\n\r\n\t\t\t\t<li>\r\n\t\t\t\t\t<b><u>다중 선형 회귀 분석(Multiple Linear Regression Analysis)</u></b>\r\n\t\t\t\t\t<ul>\r\n\t\t\t\t\t\t<li>많은 독립변수에 따라 변하는 종속변수인 경우</li>\r\n\t\t\t\t\t\t<li>y = w<sub>1</sub>x<sub>1</sub> + w<sub>2</sub>x<sub>2</sub> + ... + w<sub>n</sub>x<sub>n</sub> + b</li>\r\n\t\t\t\t\t\t<li></li>\r\n\t\t\t\t\t</ul>\r\n\t\t\t\t</li>\r\n\r\n\t\t\t\t<li>\r\n\t\t\t\t\t<b><u>가설(Hypothesis)</u></b><br/>\r\n\t\t\t\t\t<img src=\"../images/AI/35.PNG\" width={'200'} alt=''/>\r\n\t\t\t\t\t<img src=\"../images/AI/36.PNG\" width={'400'} alt=''/>\r\n\t\t\t\t\t<img src=\"../images/AI/37.PNG\" width={'400'} alt=''/>\r\n\t\t\t\t\t<ul>\r\n\t\t\t\t\t\t<li>x, y의 관계를 유추하기 위해서 수학적으로 식을 <b>가설(Hypothesis)</b>이라 한다.</li>\r\n\t\t\t\t\t\t<li><img src=\"../images/AI/38.PNG\" width={'150'} alt=''/></li>\r\n\t\t\t\t\t\t<li>비용 함수(Cost function) : 평균 제곱 오차(MSE)</li>\r\n\t\t\t\t\t\t<img src=\"../images/AI/45.PNG\" width={'400'} alt=''/>\r\n\t\t\t\t\t</ul>\r\n\t\t\t\t</li>\r\n\t\t\t\t<hr className='class-1'/>\r\n\t\t\t\t<li>\r\n\t\t\t\t\t<b><u>로지스틱 회귀(Logsitic Regression)</u></b>\r\n\t\t\t\t\t<ul>\r\n\t\t\t\t\t\t<li>두 개의 선택지 중에서 정답을 고르는 문제</li>\r\n\t\t\t\t\t\t<li>이진 분류 문제는 직선으로 표현하는 것이 적절하지 않습니다.</li>\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\t<img src=\"../images/AI/39.PNG\" width={'200'} alt=''/>\r\n\t\t\t\t\t\t<img src=\"../images/AI/40.PNG\" width={'400'} alt=''/>\r\n\t\t\t\t\t\t<li>이러한 점들을 표현하는 그래프는 알파벳의 S자 형태로 표현됩니다. </li>\r\n\t\t\t\t\t\t<li>직선을 표현하는 함수가 아니라 S자 형태로 표현할 수 있는 함수가 필요합니다. </li>\r\n\t\t\t\t\t\t<li>레이블에 해당하는 y 가 0 또는 1이라는 두 가지 값만을 가지므로, 이 문제를 풀기 위해서 예측값은 0과 1사이의 값을 가지도록 합니다.</li>\r\n\t\t\t\t\t\t<li>출력이 0과 1사이의 값을 가지면서 S자 형태로 그려지는 함수로 시그모이드 함수(Sigmoid function)가 있습니다.</li>\r\n\t\t\t\t\t\t<li></li>\r\n\t\t\t\t\t\t<li></li>\r\n\t\t\t\t\t\t<li></li>\r\n\t\t\t\t\t\t<li></li>\r\n\t\t\t\t\t</ul>\r\n\t\t\t\t</li>\r\n\r\n\t\t\t\t<li>\r\n\t\t\t\t\t<b><u>시그모이드 함수(Sigmoid function)</u></b><br/>\r\n\t\t\t\t\t<img src=\"../images/AI/42.PNG\" width={'400'} alt=''/>\r\n\t\t\t\t\t<img src=\"../images/AI/43.PNG\" width={'400'} alt=''/>\r\n\t\t\t\t\t<ul>\r\n\t\t\t\t\t\t<li>x, y의 관계를 유추하기 위해서 수학적으로 식을 <b>가설(Hypothesis)</b>이라 한다.</li>\r\n\t\t\t\t\t\t<li><img src=\"../images/AI/41.PNG\" width={'500'} alt=''/></li>\r\n\t\t\t\t\t\t<li>w, b에 따라 그림이 달라진다.</li>\r\n\r\n\t\t\t\t\t\t<li>비용 함수(Cost function) : 크로스 엔트로피(Cross Entropy)함수</li>\r\n\t\t\t\t\t\t<img src=\"../images/AI/44.PNG\" width={'600'} alt=''/>\r\n\t\t\t\t\t</ul>\r\n\t\t\t\t</li>\r\n\r\n\t\t\t</ul>\r\n\t\t\t<hr className='class-1'/>\r\n\t\t\t<ul>\r\n\t\t\t\t<li>지도 학습(Supervised Learning): 정답이 있는 데이터(분류(Classification), 회귀(Regression))</li>\r\n\t\t\t\t<li>비지도 학습(Unsupervised Learning): 정답이 없는 데이터(군집화)</li>\r\n\t\t\t\t<li>준지도 학습(semi supervised): 정답이 존재하나 정답이 있는 데이터를 구하기 힘들 때</li>\r\n\t\t\t\t<li>강화 학습(Reinforcement Learning): 행동을 취하고 이로부터 어떤 보상을 얻으면서 학습을 진행</li>\r\n\t\t\t\t<li></li>\r\n\t\t\t\t<li></li>\r\n\t\t\t</ul>\r\n\r\n\r\n\t\t</>\r\n\t);\r\n}\t\r\n","import React from 'react';\r\nimport SyntaxHighlighter from \"react-syntax-highlighter\";\r\nimport { docco } from 'react-syntax-highlighter/dist/esm/styles/hljs';\r\n\r\n\r\nfunction DL_1() {\r\n\treturn (\r\n    <>\r\n      <div>\r\n          <Contents />\r\n      </div>\r\n    </>\r\n\t);\r\n};\r\n\r\nexport default DL_1;\r\n\r\nfunction Contents() {\r\n\tconst title = 'Deep Learning';\r\n\r\n\treturn (\r\n\t\t<>\r\n\t\t\t<h1>{title}</h1>\t\r\n\r\n\t\t\t<hr className='class-1'/>\r\n\t\t\t<h3 className='h5style'><b><u>딥러닝(DL, Deep learning)</u></b></h3>\r\n\t\t\t<ul>\r\n\t\t\t\t<li>머신러닝 알고리즘 중에 인공 신경망artificial neural network을 기반으로 한 방법들을 통칭하여 딥러닝 deep learning이라고 부릅니다.</li>\r\n\t\t\t\t<li>인공 신경망과 딥러닝을 크게 구분하지 않고 사용합니다.</li>\r\n\t\t\t\t<li>모든 딥러닝 시스템은 신경망(피드 포워드신경망)으로 구성되어 있다.</li>\r\n\t\t\t\t<li>딥 러닝 시스템은 컨벌루션 신경망(CNN)과 순환 신경망(RNN)으로 나뉜다.</li>\r\n\t\t\t</ul>\r\n\r\n\t\t\t<hr className='class-1'/>\r\n\t\t\t<ul>\r\n\t\t\t\t<li>\r\n\t\t\t\t\t<b><u>ANN(Artificial Neural Network, 인공신경망)</u></b>\r\n\t\t\t\t\t<ul>\r\n\t\t\t\t\t\t<li></li>\r\n\t\t\t\t\t\t<li></li>\r\n\t\t\t\t\t\t<li></li>\r\n\t\t\t\t\t\t<li><img src=\"../images/AI/14.PNG\" width={'600'} alt=''/></li>\r\n\t\t\t\t\t</ul>\r\n\t\t\t\t</li>\r\n\t\t\t\t\r\n\t\t\t<hr className='class-1'/>\r\n\t\t\t\t<li>\r\n\t\t\t\t\t<b><u>DNN(Deep Neural Network, 심층신경망)</u></b>\r\n\t\t\t\t\t<ul>\r\n\t\t\t\t\t\t<li>입력층과 출력층 사이에 여러개의 은닉층</li>\r\n\t\t\t\t\t\t<li>연속형, 범주형 변수에 상관없이 모두 분석 가능</li>\r\n\t\t\t\t\t\t<li>feature extraction이 자동으로 수행되어, 변수 선택의 번거로움을 줄여줌</li>\r\n\t\t\t\t\t\t<li><img src=\"../images/AI/13.PNG\" width={'600'} alt=''/></li>\r\n\t\t\t\t\t</ul>\r\n\t\t\t\t</li>\r\n\t\t\t\t\r\n\t\t\t<hr className='class-1'/>\r\n\t\t\t\t<li>\r\n\t\t\t\t\t<b><u>CNN(Convolution Neural Network, 합성곱신경망)</u></b>\r\n\t\t\t\t\t<ul>\r\n\t\t\t\t\t\t<li>컨벌루션 계층은 사전 구성된 필터를 사용하여 입력한 데이터에서 정보를 추출합니다.</li>\r\n\t\t\t\t\t\t<li>풀링 계층은 데이터의 차원을 줄여 데이터를 여러 부분 또는 영역으로 나눕니다.</li>\r\n\t\t\t\t\t\t<li>연결 계층은 계층 간에 추가 신경 경로를 생성합니다.</li>\r\n\t\t\t\t\t\t<li>수십 또는 수백 개의 계층을 가질 수 있으며,</li>\r\n\t\t\t\t\t\t<li>각 계층에 서로 다른 필터가 적용되고,</li>\r\n\t\t\t\t\t\t<img src=\"../images/AI/82.PNG\" width={'500'} alt=''/><br/>\r\n\t\t\t\t\t\t<li>계층에서는 데이터에서 특징을 추출하기 위해, 데이터를 변경시키는 연산을 한다.</li>\r\n\t\t\t\t\t\t<li>각 계층은 컨벌루션 계층, 활성화(ReLU) 계층, 풀링 계층으로 구성된다.</li>\r\n\t\t\t\t\t\t<img src=\"../images/AI/83.PNG\" width={'700'} alt=''/><br/>\r\n\t\t\t\t\t\t<li>이미지 처리에 탁월한 성능을 보이는 신경망</li>\r\n\t\t\t\t\t\t<li><b>합성곱층과(Convolution layer)</b>와 <b>풀링층(Pooling layer)</b>으로 구성</li>\r\n\t\t\t\t\t\t<li><img src=\"../images/AI/15.PNG\" width={'600'} alt=''/></li>\r\n\t\t\t\t\t\t<li>합성곱 연산의 결과가 활성화 함수 ReLU를 지납니다. </li>\r\n\t\t\t\t\t\t<li>이 두 과정을 합성곱층이라고 합니다.</li>\r\n\t\t\t\t\t\t<li>그 후에 POOL이라는 구간을 지나는데 이는 풀링 연산을 의미하며 풀링층이라고 합니다.</li>\r\n\t\t\t\t\t\t<li>\r\n\t\t\t\t\t\t\t<b>합성곱 연산</b>\r\n\t\t\t\t\t\t\t<ul>\r\n\t\t\t\t\t\t\t\t<li><img src=\"../images/AI/18.PNG\" width={'200'} alt=''/>\r\n\t\t\t\t\t\t\t\t<img src=\"../images/AI/19.PNG\" width={'400'} alt=''/></li>\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t<li>이미지 처리를 위해 채널(Channel)을 도입</li>\r\n\t\t\t\t\t\t\t\t<li>기계는 글자나 이미지보다 숫자 텐서를 더 잘 처리할 수 있습니다.</li>\r\n\t\t\t\t\t\t\t\t<li>이미지는(높이, 너비, 채널)이라는 3차원 텐서이다.</li>\r\n\t\t\t\t\t\t\t\t<li><b>합성곱 연산을 통해서 이미지의 특징을 추출하는 역할을 합니다.</b> </li>\r\n\r\n\t\t\t\t\t\t\t\t<li> 커널(kernel) 또는 필터(filter) 라는 n x m  크기의 행렬로 이미지를 처음부터 끝까지 겹쳐서 이미지와 커널의 원소의 값을 곱해서 모두 더한 값을 출력한다.</li>\r\n\t\t\t\t\t\t\t\t<li>3 x 3 커널이라면 9개의 픽셀 값을 하나로 압축한다.</li>\r\n\t\t\t\t\t\t\t\t<li>커널(kernel)은 일반적으로 3 × 3 또는 5 × 5를 사용합니다.</li>\r\n\t\t\t\t\t\t\t\t<img src=\"../images/AI/20.PNG\" width={'700'} alt=''/>\t\r\n\t\t\t\t\t\t\t\t<li>끝까지 처리하면 <b>특성맵(feature map)</b>이 만들어진다.</li>\r\n\t\t\t\t\t\t\t\t<img src=\"../images/AI/21.PNG\" width={'200'} alt=''/>\t\r\n\t\t\t\t\t\t\t\t<li>위와 같이 입력으로부터 커널을 사용하여 합성곱 연산을 통해 나온 결과를 특성 맵(feature map)이라고 합니다.</li>\r\n\t\t\t\t\t\t\t\t<li>이때 커널이 이동하는 픽셀 갯수를 <b>스트라이드(stride)</b>라고 합니다.</li>\r\n\t\t\t\t\t\t\t\t<li>5 x 5 픽셀의 원 이미지를 3 x 3의 커널로 스트라이드 1로 합성곱 처리하면 결과(특성맵)은 3 x 3 의 이미지가 된다.</li>\r\n\t\t\t\t\t\t\t\t<li>특성 맵은 입력보다 크기가 작아진다는 특징이 있습니다. \r\n\t\t\t\t\t\t\t\t\t만약, 합성곱 층을 여러개 쌓았다면 최종적으로 얻은 특성 맵은 초기 입력보다 매우 작아진 상태가 되버립니다. \r\n\t\t\t\t\t\t\t\t\t합성곱 연산 이후에도 특성 맵의 크기가 입력의 크기와 동일하게 유지되도록 하고 싶다면 패딩(padding)을 사용하면 됩니다.</li>\r\n\t\t\t\t\t\t\t\t\t<img src=\"../images/AI/22.PNG\" width={'300'} alt=''/>\t\r\n\t\t\t\t\t\t\t\t<li>3 x 3의 커널, 스트라이드 1로 한 경우 1 폭짜리 제로 패딩을 사용하고,</li>\r\n\t\t\t\t\t\t\t\t<li>5 x 5의 커널, 스트라이드 1로 한 경우 2 폭짜리 제로 패딩을 사용하면 된다. </li>\r\n\t\t\t\t\t\t\t\t<li></li>\r\n\t\t\t\t\t\t\t</ul>\r\n\t\t\t\t\t\t</li>\r\n\t\t\t\t\t\t<li>\r\n\t\t\t\t\t\t\t<b>합성곱 신경망의 가중치</b>\r\n\t\t\t\t\t\t\t<ul>\r\n\t\t\t\t\t\t\t\t<li>다층 퍼셉트론으로 3 × 3 이미지를 처리한다고 가정</li>\r\n\t\t\t\t\t\t\t\t<li>우선 이미지를 1차원 텐서인 벡터로 만들면, 3 × 3 = 9가 되므로 입력층은 9개의 뉴런을 가집니다. </li>\r\n\t\t\t\t\t\t\t\t<li>그리고 4개의 뉴런을 가지는 은닉층을 추가한다고 해보겠습니다.</li>\r\n\t\t\t\t\t\t\t\t<img src=\"../images/AI/23.PNG\" width={'300'} alt=''/>\r\n\t\t\t\t\t\t\t\t<li>위에서 각 연결선은 가중치를 의미하므로, 위의 그림에서는 9 × 4 = 36개의 가중치를 가집니다.</li>\r\n\t\t\t\t\t\t\t\t<li>비교를 위해 합성곱 신경망으로 3 × 3 이미지를 처리한다고 해보겠습니다.</li>\r\n\t\t\t\t\t\t\t\t<li>2 × 2 커널을 사용하고, 스트라이드는 1로 합니다.</li>\r\n\t\t\t\t\t\t\t\t<img src=\"../images/AI/24.PNG\" width={'300'} alt=''/>\r\n\t\t\t\t\t\t\t\t<li>사실 합성곱 신경망에서 가중치는 커널 행렬의 원소들입니다. 이를 인공 신경망의 형태로 표현한다면</li>\r\n\t\t\t\t\t\t\t\t<img src=\"../images/AI/25.PNG\" width={'400'} alt=''/>\r\n\t\t\t\t\t\t\t\t<li>최종적으로 특성 맵을 얻기 위해서는 동일한 커널로 이미지 전체를 훑으며 합성곱 연산을 진행합니다.</li>\r\n\t\t\t\t\t\t\t\t<li>결국 이미지 전체를 훑으면서 사용되는 가중치는 w0, w1, w2, w3 4개 뿐입니다. </li>\r\n\t\t\t\t\t\t\t\t<li>각 합성곱 연산마다 이미지의 모든 픽셀을 사용하는 것이 아니라, 커널과 맵핑되는 픽셀만을 입력으로 사용하는 것을 볼 수 있습니다.</li>\r\n\t\t\t\t\t\t\t\t<li>결국 합성곱 신경망은 다층 퍼셉트론을 사용할 때보다 훨씬 적은 수의 가중치를 사용하며 공간적 구조 정보를 보존한다는 특징이 있습니다.</li>\r\n\t\t\t\t\t\t\t\t<li></li>\r\n\t\t\t\t\t\t\t\t<li></li>\r\n\t\t\t\t\t\t\t</ul>\r\n\r\n\t\t\t\t\t\t</li>\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\t<li>\r\n\t\t\t\t\t\t\t<b>풀링(Pooling)</b>\r\n\t\t\t\t\t\t\t<ul>\r\n\t\t\t\t\t\t\t\t<li>일반적으로 합성곱 층(합성곱 연산 + 활성화 함수) 다음에는 풀링 층을 추가하는 것이 일반적입니다. </li>\r\n\t\t\t\t\t\t\t\t<li>풀링 층에서는 특성 맵을 다운샘플링하여 특성 맵의 크기를 줄이는 풀링 연산이 이루어집니다. </li>\r\n\t\t\t\t\t\t\t\t<li>풀링 연산에서도 합성곱 연산과 마찬가지로 커널과 스트라이드의 개념을 가집니다. </li>\r\n\t\t\t\t\t\t\t\t<img src=\"../images/AI/26.PNG\" width={'300'} alt=''/>\r\n\t\t\t\t\t\t\t\t<li>위의 그림은 스트라이드가 2일 때, 2 × 2 크기 커널로 맥스 풀링 연산을 했을 때 특성맵이 절반의 크기로 다운샘플링되는 것을 보여줍니다. </li>\r\n\t\t\t\t\t\t\t\t<li>맥스 풀링은 커널과 겹치는 영역 안에서 최대값을 추출하는 방식으로 다운샘플링합니다.</li>\r\n\t\t\t\t\t\t\t\t<li>다른 풀링 기법인 평균 풀링은 최대값을 추출하는 것이 아니라 평균값을 추출하는 연산이 됩니다.</li>\r\n\t\t\t\t\t\t\t\t<li>풀링 연산은 커널과 스트라이드 개념이 존재한다는 점에서 합성곱 연산과 유사하지만, </li>\r\n\t\t\t\t\t\t\t\t<li>합성곱 연산과의 차이점은 학습해야 할 가중치가 없으며 연산 후에 채널 수가 변하지 않는다는 점입니다.</li>\r\n\t\t\t\t\t\t\t</ul>\r\n\t\t\t\t\t\t\t<li><u>위와 같은 이미지 처리에서의 합성곱 연산을 <b>2D 합성곱 연산</b>이라고 부릅니다.</u></li>\r\n\t\t\t\t\t\t</li>\r\n\t\t\t\t\t</ul>\r\n\t\t\t\t</li>\r\n\t\t\t\t<hr className='class-1'/>\r\n\t\t\t\t<li>\r\n\t\t\t\t\t<b><u>RNN(Recurrent Neural Network, 순환신경망)</u></b>\r\n\t\t\t\t\t<ul>\r\n\t\t\t\t\t\t<li>컨벌루션 계층은 사전 구성된 필터를 사용하여 입력한 데이터에서 정보를 추출합니다.</li>\r\n\t\t\t\t\t\t<li>풀링 계층은 데이터의 차원을 줄여 데이터를 여러 부분 또는 영역으로 나눕니다.</li>\r\n\t\t\t\t\t\t<li>연결 계층은 계층 간에 추가 신경 경로를 생성합니다.</li>\r\n\t\t\t\t\t\t<li>RNN(Recurrent Neural Network)은 입력과 출력을 시퀀스 단위로 처리하는 시퀀스(Sequence, 순서, 나열) 모델입니다. </li>\r\n\t\t\t\t\t\t<li>번역기를 생각해보면 입력은 번역하고자 하는 단어의 시퀀스인 문장입니다. </li>\r\n\t\t\t\t\t\t<li>출력에 해당되는 번역된 문장 또한 단어의 시퀀스입니다. </li>\r\n\t\t\t\t\t\t<li>이와 같이 시퀀스들을 처리하기 위해 고안된 모델들을 시퀀스 모델이라고 합니다. </li>\r\n\t\t\t\t\t\t<li>그 중 RNN은 가장 기본적인 인공 신경망 시퀀스 모델입니다.</li>\r\n\t\t\t\t\t\t<li>신경망들은 전부 은닉층에서 활성화 함수를 지난 값은 오직 출력층 방향으로만 향했습니다. </li>\r\n\t\t\t\t\t\t<li>이와 같은 신경망들을 피드 포워드 신경망(Feed Forward Neural Network)이라고 합니다.</li>\r\n\t\t\t\t\t\t<li>RNN은 은닉층의 노드에서 활성화 함수를 통해 나온 결과값을 출력층 방향으로도 보내면서, </li>\r\n\t\t\t\t\t\t<li> 다시 은닉층 노드의 다음 계산의 입력으로 보내는 특징을 갖고있습니다.</li>\r\n\t\t\t\t\t\t<img src=\"../images/AI/27.PNG\" width={'200'} alt=''/>\r\n\t\t\t\t\t\t<li>x 는 입력층의 입력 벡터, y 는 출력층의 출력 벡터입니다. </li>\r\n\t\t\t\t\t\t<li>실제로는 편향 b도 입력으로 존재할 수 있지만 앞으로의 그림에서는 생략합니다.</li>\r\n\t\t\t\t\t\t<li>RNN에서 은닉층에서 활성화 함수를 통해 결과를 내보내는 역할을 하는 노드를 셀(cell)이라고 합니다.</li>\r\n\t\t\t\t\t\t<li>이 셀은 이전의 값을 기억하려고 하는 일종의 메모리 역할을 수행하므로 이를 <b>메모리 셀</b> 또는 <b>RNN 셀</b>이라고 표현합니다.</li>\r\n\t\t\t\t\t\t<li>은닉층의 메모리 셀은 각각의 시점(time step)에서 바로 이전 시점에서의 은닉층의 메모리 셀에서 나온 값을 자신의 입력으로 사용하는 재귀적 활동을 하고 있습니다. </li>\r\n\t\t\t\t\t\t<li>앞으로는 현재 시점을 변수 t로 표현하겠습니다.</li>\r\n\t\t\t\t\t\t<li>이는 현재 시점 t에서의 메모리 셀이 갖고있는 값은 과거의 메모리 셀들의 값에 영향을 받은 것임을 의미합니다. </li>\r\n\t\t\t\t\t\t<li>메모리 셀이 출력층 방향 또는 다음 시점인 t+1의 자신에게 보내는 값을 은닉 상태(hidden state) 라고 합니다.</li>\r\n\t\t\t\t\t\t<li>다시 말해 t 시점의 메모리 셀은 t-1 시점의 메모리 셀이 보낸 은닉 상태값을 t 시점의 은닉 상태 계산을 위한 입력값으로 사용합니다.</li>\r\n\t\t\t\t\t\t<img src=\"../images/AI/28.PNG\" width={'400'} alt=''/>\r\n\t\t\t\t\t\t<li>피드 포워드 신경망에서는 뉴런이라는 단위를 사용했지만, </li>\r\n\t\t\t\t\t\t<li>RNN에서는 뉴런이라는 단위보다는 입력층과 출력층에서는 각각 <b>입력 벡터</b>와 <b>출력 벡터</b>, 은닉층에서는 <b>은닉 상태</b>라는 표현을 주로 사용합니다. </li>\r\n\t\t\t\t\t\t<img src=\"../images/AI/29.PNG\" width={'400'} alt=''/>\r\n\t\t\t\t\t\t<li>입력층의 뉴런 수는 4, 은닉층의 뉴런 수는 2, 출력층의 뉴런 수는 2</li>\r\n\t\t\t\t\t\t<img src=\"../images/AI/30.PNG\" width={'400'} alt=''/>\r\n\t\t\t\t\t\t<li>위 그림은 입력과 출력의 길이에 따라서 달라지는 RNN의 다양한 형태를 보여줍니다.</li>\r\n\t\t\t\t\t\t<li></li>\r\n\t\t\t\t\t\t<li></li>\r\n\t\t\t\t\t\t<li></li>\r\n\t\t\t\t\t\t<li></li>\r\n\t\t\t\t\t\t<li></li>\r\n\t\t\t\t\t\t<li></li>\r\n\t\t\t\t\t</ul>\r\n\t\t\t\t</li>\r\n\t\t\t\t<li></li>\r\n\t\t\t\t<li></li>\r\n\t\t\t</ul>\r\n\r\n\t\t\t<hr className='class-1'/>\r\n\t\t\t<h3 className='h5style'><b><u>tf.keras.layers.Dense</u></b></h3>\t\r\n\r\n\t\t\t<b><u>예제1</u></b>\r\n\t\t\t<div>\r\n\t\t\t<SyntaxHighlighter language=\"python\" style={docco} showLineNumbers={true}>\r\n\t\t\t\t{`\r\nmodel = tf.keras.models.Sequential()\r\nmodel.add(tf.keras.Input(shape=(4,)))\r\nmodel.add(tf.keras.layers.Dense(16, activation='relu'))\r\nmodel.add(tf.keras.layers.Dense(32))\r\n\r\nprint(model.output_shape)\r\n\r\n(None, 32)\r\n\t\t\t\t`}\r\n    \t</SyntaxHighlighter>\r\n\t\t\t</div>\r\n\r\n\t\t\t<ul>\r\n\t\t\t\t<li>tf.keras.Sequential()는 여러 층을 순서대로 쌓아서 신경망 모델을 구성합니다.</li>\r\n\t\t\t\t<li>tf.keras.Sequential()는 여러 층을 순서대로 쌓아서 신경망 모델을 구성합니다.</li>\r\n\t\t\t\t<li>데이터에서 어떤 의미있는 값을 알아내는 것(knowledge-discovery in databases)라고도 한다.</li>\r\n\t\t\t\t<li>예제에서는 입력층과 두 개의 Dense 층을 이용해서 하나의 신경망 모델을 구성했습니다.</li>\r\n\t\t\t\t<li>첫번째 인자는 출력의 개수입니다.</li>\r\n\t\t\t\t<li>activation은 활성화 함수 (Activation function)를 지정합니다.</li>\r\n\t\t\t</ul>\r\n\r\n\t\t\t<b><u>예제2</u></b>\r\n\t\t\t<SyntaxHighlighter language=\"python\" style={docco} showLineNumbers={true}>\r\n\t\t\t\t{`\r\nimport tensorflow as tf\r\nmodel = tf.keras.Sequential()\r\nmodel.add(tf.keras.Input(shape=(4,)))\r\nmodel.add(tf.keras.layers.Dense(16, activation='relu', use_bias=True))\r\nmodel.add(tf.keras.layers.Dense(64, activation='relu', use_bias=False))\r\nmodel.add(tf.keras.layers.Dense(32))\r\n\r\nweights = model.get_weights()\r\n\r\nprint(len(weights))\r\n\r\n## Weight matrix\r\nprint(weights[0])\r\nprint(weights[0].shape)\r\nprint(weights[2])\r\nprint(weights[2].shape)\r\nprint(weights[3])\r\nprint(weights[3].shape)\r\n\r\n## Bias\r\nprint(weights[1])\r\nprint(weights[1].shape)\r\nprint(weights[4])\r\nprint(weights[4].shape)\r\n\r\n(None, 32)\r\n\t\t\t\t`}\r\n    \t</SyntaxHighlighter>\r\n\t\t\t<ul>\r\n\t\t\t\t<li>use_bias는 신경망에서 bias 파라미터를 사용할지 여부를 지정합니다.</li>\r\n\t\t\t\t<li>get_weights() 메서드를 사용해서 모델의 weight를 얻어보면,</li>\r\n\t\t\t\t<li>weights[0], weights[2], weights[3]은 각각 (4, 16), (16, 64), (64, 32) 형태의 weight matrix이고,</li>\r\n\t\t\t\t<li>weights[1], weights[4]는 (16,), (32,) 형태의 bias 값임을 알 수 있습니다.</li>\r\n\t\t\t</ul>\r\n\r\n\t\t\t<hr className='class-1'/>\r\n\t\t\t<h3 className='h5style'><b><u>[Tensorflow] 간단한 인공지능 모델 생성 및 확인</u></b></h3>\t\r\n\r\n\t\t\t<b><u>전체 코드</u></b>\r\n\t\t\t<SyntaxHighlighter language=\"python\" style={docco} showLineNumbers={true}>\r\n\t\t\t\t{`\r\nimport tensorflow as tf\r\n\r\nmnist = tf.keras.datasets.mnist\r\n\r\n(x_train, y_train), (x_test, y_test) = mnist.load_data()\r\nx_train, x_test = x_train / 255.0, x_test / 255.0\r\n\r\nmodel = tf.keras.models.Sequential([\r\n  tf.keras.layers.Flatten(input_shape=(28, 28)),\r\n  tf.keras.layers.Dense(128, activation='relu'),\r\n  tf.keras.layers.Dropout(0.2),\r\n  tf.keras.layers.Dense(10, activation='softmax')\r\n])\r\n# model.summary()\r\n\r\nmodel.compile(optimizer='adam',\r\n              loss='sparse_categorical_crossentropy',\r\n              metrics=['accuracy'])\r\n\r\nmodel.fit(x_train, y_train, epochs=5)\r\n\r\n\r\nscores  = model.evaluate(x_test,  y_test, verbose=2)\r\nprint(\"정확도 : %.2f %%\" % (scores[1]*100))\r\n\r\n\t\t\t`}\r\n\t\t\t</SyntaxHighlighter>\r\n\t\t\t<b><u>코드 설명</u></b>\r\n\t\t\t<ul>\r\n\t\t\t\t<li>2. 위 코드는 텐서플로우 라이브러리를 불러오고, 라이브러리 이름을 tf라고 칭한다는 뜻입니다.</li>\r\n\t\t\t\t<li>4. tensorflow 에서 제공하는 데이터 셋인 mnist 를 불러온다, 손글씨 숫자에 관한 이미지 데이터 셋</li>\r\n\t\t\t\t<li>\r\n\t\t\t\t\t6. 위 코드는 데이터에서 객체의 데이터와 라벨값을 불러오는 코드\r\n\t\t\t\t\t<ul>\r\n\t\t\t\t\t\t<li>x_train : 손글씨 숫자 '이미지' 대입</li>\r\n\t\t\t\t\t\t<li>y_train : 이미지가 의미하는 숫자 대입(라벨값)</li>\r\n\t\t\t\t\t\t<li>x_test : 손글씨 숫자 '이미지' 대입</li>\r\n\t\t\t\t\t\t<li>y_test : 이미지가 의미하는 숫자 대입(라벨값)</li>\r\n\t\t\t\t\t\t<li><li><img src=\"../images/AI/9.PNG\" width={'400'} alt=''/><br/></li></li>\r\n\t\t\t\t\t</ul>\r\n\r\n\t\t\t\t</li>\r\n\t\t\t\t<li>7. 위 코드로 데이터 값을 0–1로 정규화합니다.(흑백으로 나누는 거죠)</li>\r\n\t\t\t\t<li>\r\n\t\t\t\t\t9. 모델을 구성\r\n\t\t\t\t\t<ul>\r\n\t\t\t\t\t\t<li>Sequential : 뉴럴네트워크 레이어를 생성</li>\r\n\t\t\t\t\t\t<li>Flatten(input_shape=(28, 28)) : 다차원 배열을 일차배열로 만들어 주는 것, 28 x 28 배열을 입력으로 받아 1차원 배열로 변환</li>\r\n\t\t\t\t\t\t<li>layers.Dense(128, activation='relu'), : 히든레이어의 노드개수는 128개, 활성화 함수는 relu\r\n\t\t\t\t\t\t\t이 레이어에서 입력은 가중치 값과 곱해지고 더해진다음, 학습이 진행되며 이 가중치 값이 수정되어 지며 정답을 찾아가는 것이다.\r\n\t\t\t\t\t\t</li>\r\n\t\t\t\t\t\t<li>layers.Dropout(0.2), : 오버피팅 방지한 것으로 이전레이어의 출력을 20% 0으로 만듭니다.</li>\r\n\t\t\t\t\t\t<li>layers.Dense(10, activation='softmax') : 숫자는 0부터 9까지 총 10개의 라벨값을 가지므로\r\n\t\t\t\t\t\t\t모델의 출력은 10개입니다.\r\n\t\t\t\t\t\t\t활성화 함수는 softmax로 다중 클래스 분류 문제의 출력층에서 주로 쓰이는 모델입니다.\r\n\r\n\t\t\t\t\t\t\t이 모델을 그림으로 표현하면 다음과 같습니다.</li>\r\n\t\t\t\t\t\t<li><img src=\"../images/AI/10.PNG\" width={'600'} alt=''/><br/></li>\r\n\t\t\t\t\t</ul>\r\n\t\t\t\t</li>\r\n\t\t\t\t<li>17. 모델을 컴파일 해줍니다</li>\r\n\t\t\t\t<li>21. Mnist 데이터 셋에서 훈련데이터 셋을 사용하고\r\n\t\t\t\t\tepochs를 5로 설정하여 모델을 5번 반복하여 훈련합니다.</li>\r\n\t\t\t</ul>\r\n\t\t\t<b><u>예제2</u></b>\r\n\r\n\r\n\t\t</>\r\n\t);\r\n}\t\r\n","import React from 'react';\r\nimport SyntaxHighlighter from \"react-syntax-highlighter\";\r\nimport { docco } from 'react-syntax-highlighter/dist/esm/styles/hljs';\r\n\r\n\r\nfunction DL_2() {\r\n\treturn (\r\n    <>\r\n      <div>\r\n          <Contents />\r\n      </div>\r\n    </>\r\n\t);\r\n};\r\n\r\nexport default DL_2;\r\n\r\nfunction Contents() {\r\n\tconst title = 'CNN 이론/coding';\r\n\r\n\treturn (\r\n\t\t<>\r\n\t\t\t<h1>{title}</h1>\t\r\n\r\n\t\t\t<hr className='class-1'/>\r\n\t\t\t<h3 className='h5style'><b><u>1. CNN 기초 이론</u></b></h3>\r\n\r\n\t\t\t<h3 className='h5style'><b><u>(1) CNN의 구조</u></b></h3>\r\n\t\t\t\t<ul>\r\n\t\t\t\t\t<li>Convolutional layer, Pooling layer, Fully connected layer로 구성</li>\r\n\t\t\t\t\t<ol>\r\n\t\t\t\t\t\t<li>이미지 데이터를 입력하면 우선 Conv layer에서 필터 연산을 거치게 되고</li>\r\n\t\t\t\t\t\t<li>활성화함수를 통과한 후,</li>\r\n\t\t\t\t\t\t<li>Pooling layer에서 pooling된다.</li>\r\n\t\t\t\t\t\t<li>CNN이나 MLP(Multi-Layer Perceptron)는 지난 입력값의 기억(memory)을 보존하고 있지 않다. </li>\r\n\t\t\t\t\t</ol>\r\n\t\t\t\t\t<li>이 구조가 여러번 반복된다. </li>\r\n\r\n\t\t\t\t\t<b><u>1. Convolutional layer</u></b>\r\n\t\t\t\t\t<ul>\r\n\t\t\t\t\t\t<li>합성곱계층 Convolutional layer(줄여서 Conv layer)는 입력된 이미지의 특징(화소, 구성)을 반영하여 새로 처리된 이미지를 생성하는 계층이다. </li>\r\n\t\t\t\t\t\t<li>합성곱계층에서는 이미지에 대해 필터연산을 수행하게 되는데 필터의 개수, 크기에 따라 이미지 연산이 달라지기도 한다.</li>\r\n\t\t\t\t\t</ul>\r\n\t\t\t\t\t<b><u>2. Pooling layer</u></b>\r\n\t\t\t\t\t<ul>\r\n\t\t\t\t\t\t<li>풀링 계층은 합성곱 계층을 통과한 이미지의 대표적인 픽셀만 뽑는 역할을 한다.</li>\r\n\t\t\t\t\t\t<li>pooling 방법에는 max pooling, global mean pooling이 있는데 일반적으로 CNN에서는 max pooling을 많이 사용한다. </li>\r\n\t\t\t\t\t\t<li>Max pooling은 n x n 픽셀에서 가장 큰 값만 추출한다.</li>\r\n\t\t\t\t\t</ul>\r\n\t\t\t\t\t<b><u>3. Fully connected layer</u></b>\r\n\t\t\t\t\t<ul>\r\n\t\t\t\t\t\t<li>완전연결계층에서는 앞에서 모든 처리를 거친 이미지 데이터를 1D array로 변환하여(flatten)</li>\r\n\t\t\t\t\t\t<li>softmax 함수를 적용할 수 있게끔 변환한다.</li>\r\n\t\t\t\t\t</ul>\r\n\r\n\t\t\t<h3 className='h5style'><b><u>(2) 기본 처리</u></b></h3>\r\n\t\t\t\t<ul>\r\n\t\t\t\t\t<li>filter size: 합성곱 계층에서 가장 핵심적인 필터의 크기를 나타내는 것으로, 필터 사이즈에 따라 output image의 사이즈가 달라진다.</li>\r\n\t\t\t\t\t<li>fiter 개수: 필터 개수는 output image의 채널 수를 결정한다.</li>\r\n\t\t\t\t\t<li>padding: 기존 이미지 주변을 특정 값(보통 0)으로 채우는 과정으로, 합성곱 계층을 통과해도 이미지의 사이즈가 감소하는 것을 방지하기 위해 사용한다.</li>\r\n\t\t\t\t\t<li>stride: 합성곱 계층에서 필터가 이동할 때, 처리 후 몇칸을 이동할지를 결정하는 것으로 이 역시 output image의 사이즈를 결정한다.</li>\r\n\t\t\t\t</ul>\r\n\t\t\t\t\r\n\t\t\t<hr className='class-1'/>\r\n\r\n\r\n\t\t\t<h3 className='h5style'><b><u>2. Simple CNN 코드</u></b></h3>\r\n\t\t\t<h3 className='h5style'><b><u>(1) load data(손글씨)</u></b></h3>\r\n\t\t\t\t<ul>\r\n\t\t\t\t\t<li>train images: 이미지 데이터 600000개, 이미지 크기 28 x 28</li>\r\n\t\t\t\t\t<li>test images: 이미지 데이터 100000개, 이미지 크기 28 x 28</li>\r\n\t\t\t\t\t<li>class 수: 10개(0~9)</li>\r\n\t\t\t\t\t<img src=\"../images/AI/9.PNG\" width={'600'} alt=''/>\r\n\t\t\t\t</ul>\r\n\r\n\t\t\t</ul>\r\n\r\n\t\t\t<hr className='class-1'/>\r\n\t\t\t<h3 className='h5style'><b><u>CNN 손글씨 Code</u></b></h3>\t\r\n\r\n\t\t\t<b><u>예제1</u></b>\r\n\t\t\t<div>\r\n\t\t\t<SyntaxHighlighter language=\"python\" style={docco} showLineNumbers={true}>\r\n\t\t\t\t{`\r\nimport tensorflow as tf\r\nimport matplotlib.pyplot as plt\r\n\r\n# MNIST 데이터 로드\r\nmnist = tf.keras.datasets.mnist\r\n\r\n(x_train, y_train),(x_test, y_test) = mnist.load_data()\r\n\r\n# imshow를 이용해 MNIST 이미지 세개 미리보기\r\nfig, ax = plt.subplots(nrows = 1, ncols = 3)\r\nfor i in range(3):\r\n  ax[i].imshow(x_train[i])\r\n\r\nplt.tight_layout()\r\nplt.show()\r\n\r\n# 이미지 데이터 표준화\r\nx_train, x_test = x_train / 255.0, x_test / 255.0  #픽셀값 범위(0~225)를 0~1 사이로 조정해 전처리\r\n\r\nmodel = tf.keras.models.Sequential([\r\n  tf.keras.layers.Flatten(input_shape=(28, 28)), #각 이미지는 28x28 픽셀\r\n  tf.keras.layers.Dense(128, activation='relu'),\r\n  tf.keras.layers.Dropout(0.2),\r\n  tf.keras.layers.Dense(10, activation='softmax')\r\n])\r\n\r\nmodel.compile(optimizer='adam',\r\n              loss='sparse_categorical_crossentropy',\r\n              metrics=['accuracy'])\r\n\r\nmodel.fit(x_train, y_train, epochs=5)\r\nmodel.evaluate(x_test, y_test) #테스트\r\n\r\n\t\t\t\t`}\r\n    \t</SyntaxHighlighter>\r\n\t\t\t</div>\r\n\r\n\t\t\t<ul>\r\n\t\t\t\t<li>tf.keras.layers.Flatten : input_shape인 28*28(2차원 배열)의 이미지 포맷을 28*28=784 픽셀의 1차원 배열로 변환함. </li>\r\n\t\t\t\t<li>tf.keras.layers.Dense : 이 층은 밀집 연결(densely-connected)층 또는 완전 연결(fully-connected)층 이라고 부른다. \r\n\t\t\t\t\t위 코드의 첫 번째 Dense 층은 128개의 노드, 두번째 Dense 층은 10개의 노드를 갖는다. </li>\r\n\t\t\t\t<li>tf.keras.layers.Dropout(0.2) : overfitting을 방지하기 위한 방법 중 하나로 입력층과 은닉층의 총 노드 수의 0.2%를 생략 하고 학습함. \r\n\t\t\t\t\t주로 0.2~0.5를 많이 사용함.</li>\r\n\t\t\t\t<li>활성화 함수 'softmax'는 주로 클래스 값이 3개 이상인 데이터에 마지막 Dense(출력값)에 주로 쓰인다. \r\n\t\t\t\t\t위 코드를 보면 총 10개의 확률을 반환(전체 확률의 합은 1)하며, 각 노드는 현재 이미지가 10개의 클래스 중 하나에 속할 확률을 출력한다.</li>\r\n\t\t\t\t<li>model.compile : 모델을 훈련하기 전에 필요한 몇 가지 설정이  추가된다.</li>\r\n\t\t\t\t<li>optimizer : 데이터와 손실 함수를 바탕으로 모델의 업데이트 방법을 결정</li>\r\n\t\t\t\t<li>loss : Loss function. 훈련하는 동안 모델의 오차를 측정. 모델의 학습이 올바른 방향으로 향하도록 이 함수를 최소화해야함.</li>\r\n\t\t\t\t<li>metrics : 훈련 단계와 테스트 단계를 모니터링하기 위한 지표 설정.  accuracy(정확도), MSE, MAE (오차의평균) 등이 있음.</li>\r\n\t\t\t\t<li>epochs : 지금까지의 과정 반복 횟수</li>\r\n\t\t\t</ul>\r\n\r\n\r\n\t\t\t<b><u>예제2</u></b>\r\n\t\t\t<div>\r\n\t\t\t<SyntaxHighlighter language=\"python\" style={docco} showLineNumbers={true}>\r\n\t\t\t\t{`\r\nimport numpy as np\r\nimport pandas as pd\r\nimport tensorflow as tf\r\nfrom tensorflow import keras\r\n\r\nfrom sklearn.datasets import fetch_openml\r\nmnist = fetch_openml('mnist_784',version=1,cache=True)\r\n\r\nfrom tensorflow.keras.utils import to_categorical\r\nX = (mnist.data.values/255).reshape(len(mnist.data),28,28,1)\r\ny = to_categorical(mnist.target.astype(np.int),10)\r\n\r\nfrom sklearn.model_selection import train_test_split\r\nX_train,X_test,y_train,y_test = train_test_split(X,y,test_size=0.3,random_state=1)\r\n\r\n\r\nfrom keras.models import Sequential\r\nfrom keras.layers import Dense,Flatten,Dropout\r\nfrom keras.layers.convolutional import Conv2D,MaxPooling2D\r\n\r\nmodel = Sequential()\r\nmodel.add(Conv2D(filters=32,kernel_size=(3,3),strides=(1,1),padding='Same',activation='relu',input_shape=(28,28,1)))\r\nmodel.add(Conv2D(filters=32,kernel_size=(3,3),strides=(1,1),padding='Same',activation='relu'))\r\nmodel.add(MaxPooling2D(pool_size=(2,2)))\r\nmodel.add(Conv2D(filters=64, kernel_size=(3,3),strides=(1,1),padding='Same',activation='relu'))\r\nmodel.add(Conv2D(filters=64, kernel_size=(3,3),strides=(1,1),padding='Same',activation='relu'))\r\nmodel.add(MaxPooling2D(pool_size=(2,2)))\r\nmodel.add(Flatten())\r\nmodel.add(Dense(units=128,activation='relu'))\r\nmodel.add(Dropout(0.25))\r\nmodel.add(Dense(units=10,activation='softmax'))\r\n\r\nmodel.compile(loss='categorical_crossentropy',optimizer='adam',metrics=['accuracy'])\r\nmodel.summary()\r\n\r\nhist = model.fit(X_train,y_train,epochs =5 , batch_size=1000,verbose=2)\r\n\r\nloss,acc = model.evaluate(X_test,y_test)\r\nprint('손실값:',round(loss,3))\r\nprint('정확도:',round(acc,3))\r\n\r\nimport matplotlib.pyplot as plt\r\nplt.figure(figsize=(20,10))\r\n\r\nplt.subplot(1,2,1)\r\nplt.plot(hist.history['loss'],color='blue',linestyle='--',label='train')\r\nplt.plot(hist.history['val_loss'],color='red',label='validation')\r\nplt.xlabel('epoch',fontsize=15)\r\nplt.ylabel('loss',fontsize=15)\r\nplt.title('LOSS',fontsize=18)\r\nplt.grid(linestyle='--')\r\nplt.legend(fontsize=15,loc=\"best\") \r\nplt.ylim(0,0.2)\r\n\r\n\r\nplt.subplot(1,2,2)\r\nplt.plot(hist.history['accuracy'],color='blue',linestyle='--',label='train')\r\nplt.plot(hist.history['val_accuracy'],color='red',label='validation')\r\nplt.xlabel('epoch',fontsize=15)\r\nplt.ylabel('accuracy',fontsize=15)\r\nplt.title('ACCURACY',fontsize=18)\r\nplt.grid(linestyle='--')\r\nplt.legend(fontsize=15,loc=\"best\") \r\nplt.ylim(0.9,1)\r\nplt.show()\r\n\r\n\r\n\t\t\t\t`}\r\n    \t</SyntaxHighlighter>\r\n\t\t\t</div>\r\n\r\n\t\t\t<ul>\r\n\t\t\t\t<li>tensorflow와 keras를 import 하고 mnist data를 fetch_openml에서 불러온다. </li>\r\n\t\t\t\t<li>mnist.data에 feature가, mnist.target에 정답 레이블이 들어 있다.</li>\r\n\t\t\t\t<li>mnist.data는 (70000, 784)로, 70000개의 흑백의 손글씨 이미지가 들어있고, \r\n\t\t\t\t\t한 이미지는 28*28의 픽셀로 이루어져 있는데 28*28 = 784개의 픽셀이 한 행에 일렬로 놓인다. \r\n\t\t\t\t\t각 픽셀은 0부터 255까지의 정수로 흑백을 나타낸다.</li>\r\n\t\t\t\t<li>mnist.data.values/255로 모든 픽셀이 0~1사이의 값을 갖도록 정규화를 해주었다.</li>\r\n\t\t\t\t<li>CNN에 넣는 이미지 데이터는 4차원이어야 한다. (행의 개수, width, height, channel)이고, \r\n\t\t\t\t\tmnist data는 28*28 픽셀로 이루어져있으므로 width = 28, height = 28으로, \r\n\t\t\t\t\t흑백 이미지이므로  channel = 1로 넣어준다.</li>\r\n\t\t\t\t<li>mnist.target은 0~9까지의 정답 라벨이 들어있는데, str 형식으로 되어있기 때문에 astype(np.int)로 정수 형태로 바꿔주고, \r\n\t\t\t\t\tone hot encoding을 위해 to_categorical 함수를 적용해준다.</li>\r\n\t\t\t\t\t<img src=\"../images/AI/84.PNG\" width={'600'} alt=''/>\r\n\t\t\t</ul>\r\n\t\t\t\r\n\r\n\r\n\r\n\r\n\t\t</>\r\n\t);\r\n}\t\r\n","import React from 'react';\r\nimport SyntaxHighlighter from \"react-syntax-highlighter\";\r\nimport { docco } from 'react-syntax-highlighter/dist/esm/styles/hljs';\r\n\r\n\r\nfunction DL_3() {\r\n\treturn (\r\n    <>\r\n      <div>\r\n          <Contents />\r\n      </div>\r\n    </>\r\n\t);\r\n};\r\n\r\nexport default DL_3;\r\n\r\nfunction Contents() {\r\n\tconst title = 'RNN 이론/coding';\r\n\r\n\treturn (\r\n\t\t<>\r\n\t\t\t<h1>{title}</h1>\t\r\n\r\n\t\t\t<hr className='class-1'/>\r\n\t\t\t<h3 className='h5style'><b><u>1. RNN 기초 이론</u></b></h3>\r\n\t\t\t\t<ol>\r\n\t\t\t\t\t<li>기존의 인공 신경망의 은닉층은 전후 맥락이 고려되지 않고 단순히 뉴런만 배치되어있는 구조이다.</li>\r\n\t\t\t\t\t<li>전통적 뉴럴 네트워크는 이전에 일어난 사건을 바탕으로 나중을 생각하지 못한다</li>\r\n\t\t\t\t\t<li>RNN은 이 문제를 해결하고자 하는 모델이고 스스로를 반복하면서 이전 단계에서 얻은 정보가 지속되도록 한다.</li>\r\n\t\t\t\t\t<li>순서가 중요한 sequence data에 사용하는 모델 구조로 기존 인공신경망에서 순환성을 추가하였다.</li>\r\n\t\t\t\t\t<li>RNN은 순환형 구조로 인해 지난 입력값에 대한 기억(memory)을 가지고 있다</li>\r\n\t\t\t\t\t<li></li>\r\n\t\t\t\t</ol>\r\n\t\t\t<h3 className='h5style'><b><u>(1) RNN의 구조</u></b></h3>\r\n\t\t\t\t<ul>\r\n\t\t\t\t\t<li>RNN(Recurrent Neural Network) 순환 신경망 모델은 입력과 출력을 Sequence 단위로 처리하는 가장 기본적인 시퀀스 모델입니다.</li>\r\n\t\t\t\t\t<img src=\"../images/AI/85.PNG\" width={'600'} alt=''/>\r\n\t\t\t\t\t<img src=\"../images/AI/28.PNG\" width={'600'} alt=''/>\r\n\t\t\t\t\t<ol>\r\n\t\t\t\t\t\t<li>은익층의 RNN셀(초록)은 앞단계의 출력을 입력으로 사용한다.</li>\r\n\t\t\t\t\t\t<li>input xt를 받아서 ht를 내보내고, ht는 다음 단계의 network로 전달되어, 이전 단계의 정보를 받는것이다.</li>\r\n\t\t\t\t\t\t<li>RNN의 기본 구조는 아래위 그림과 같다. 녹색 박스는 히든 state를 의미한다.</li>\r\n\t\t\t\t\t\t<li>빨간 박스는 input 𝑥, 파란 박스는 output 𝑦이다. </li>\r\n\t\t\t\t\t\t<li>재 상태의 히든 state ℎ𝑡는 직전 시점의 히든 state ℎ𝑡−1를 받아 갱신됩니다. </li>\r\n\t\t\t\t\t\t<li>hidden state의 활성함수는 비선형함수인 하이퍼볼릭 탄젠트 함수 (tanh)이다. </li>\r\n\t\t\t\t\t\t<li>새로운값 = 활성화함수 tanh(가중치 x 이전값 + 가중치 x 입력값 )</li>\r\n\t\t\t\t\t</ol>\r\n\r\n\t\t\t\t\t<hr className='class-1'/>\r\n\t\t\t\t\t<h3 className='h5style'><b><u>(2) RNN의 종류</u></b></h3>\r\n\t\t\t\t\t<ul>\r\n\t\t\t\t\t\t<li>one to one : 사진 한장을 받아 사진의 설명 문장 출력</li>\r\n\t\t\t\t\t\t<li>many to one : 이메일 판정</li>\r\n\t\t\t\t\t\t<li>one to many : </li>\r\n\t\t\t\t\t\t<li></li>\r\n\t\t\t\t\t\t<li>many to many : 문장을 입력으로 받아서 여러 개의 단어로 구성된 문장을 반환한다.(번역)</li>\r\n\t\t\t\t\t</ul>\r\n\r\n\t\t\t\t\t<b><u>1. 바닐라 RNN</u></b>\r\n\t\t\t\t\t<ul>\r\n\t\t\t\t\t\t<li>RNN의 가장 단순한 형태를 바닐라 RNN이라고 말합니다.</li>\r\n\t\t\t\t\t\t<li>가장 중요한 정보가 앞 쪽의 시점에 위치할 경우 바닐라 RNN의 경우 앞 쪽의 중요한 정보가 뒤로 오면서 정보량의 손실이 일어나게 됩니다.</li>\r\n\t\t\t\t\t\t<li></li>\r\n\t\t\t\t\t\t<li></li>\r\n\t\t\t\t\t\t<li></li>\r\n\t\t\t\t\t</ul>\r\n\t\t\t\t\t<b><u>2. LSTM(장단기 메모리)</u></b>\r\n\t\t\t\t\t<ul>\r\n\t\t\t\t\t\t<li></li>\r\n\t\t\t\t\t\t<li></li>\r\n\t\t\t\t\t</ul>\r\n\t\t\t\t\t<b><u>3. GRU( 게이트 순환 유닛)</u></b>\r\n\t\t\t\t\t<ul>\r\n\t\t\t\t\t\t<li></li>\r\n\t\t\t\t\t\t<li></li>\r\n\t\t\t\t\t</ul>\r\n\r\n\t\t\t<h3 className='h5style'><b><u>(2) 기본 처리</u></b></h3>\r\n\t\t\t\t<ul>\r\n\t\t\t\t\t\t<li></li>\r\n\t\t\t\t\t\t<li></li>\r\n\t\t\t\t</ul>\r\n\t\t\t\t\r\n\t\t\t</ul>\r\n\r\n\t\t\t<hr className='class-1'/>\r\n\t\t\t<h3 className='h5style'><b><u>tf.keras.layers.Dense</u></b></h3>\t\r\n\r\n\t\t\t<b><u>예제1</u></b>\r\n\t\t\t<div>\r\n\t\t\t<SyntaxHighlighter language=\"python\" style={docco} showLineNumbers={true}>\r\n\t\t\t\t{`\r\nimport tensorflow as tf\r\nimport matplotlib.pyplot as plt\r\n\r\n# MNIST 데이터 로드\r\nmnist = tf.keras.datasets.mnist\r\n\r\n(x_train, y_train),(x_test, y_test) = mnist.load_data()\r\n\r\n# imshow를 이용해 MNIST 이미지 세개 미리보기\r\nfig, ax = plt.subplots(nrows = 1, ncols = 3)\r\nfor i in range(3):\r\n  ax[i].imshow(x_train[i])\r\n\r\nplt.tight_layout()\r\nplt.show()\r\n\r\n# 이미지 데이터 표준화\r\nx_train, x_test = x_train / 255.0, x_test / 255.0  #픽셀값 범위(0~225)를 0~1 사이로 조정해 전처리\r\n\r\nmodel = tf.keras.models.Sequential([\r\n  tf.keras.layers.Flatten(input_shape=(28, 28)), #각 이미지는 28x28 픽셀\r\n  tf.keras.layers.Dense(128, activation='relu'),\r\n  tf.keras.layers.Dropout(0.2),\r\n  tf.keras.layers.Dense(10, activation='softmax')\r\n])\r\n\r\nmodel.compile(optimizer='adam',\r\n              loss='sparse_categorical_crossentropy',\r\n              metrics=['accuracy'])\r\n\r\nmodel.fit(x_train, y_train, epochs=5)\r\nmodel.evaluate(x_test, y_test) #테스트\r\n\r\n\t\t\t\t`}\r\n    \t</SyntaxHighlighter>\r\n\t\t\t</div>\r\n\r\n\t\t\t<ul>\r\n\t\t\t\t<li>tf.keras.layers.Flatten : input_shape인 28*28(2차원 배열)의 이미지 포맷을 28*28=784 픽셀의 1차원 배열로 변환함. </li>\r\n\t\t\t\t<li>tf.keras.layers.Dense : 이 층은 밀집 연결(densely-connected)층 또는 완전 연결(fully-connected)층 이라고 부른다. \r\n\t\t\t\t\t위 코드의 첫 번째 Dense 층은 128개의 노드, 두번째 Dense 층은 10개의 노드를 갖는다. </li>\r\n\t\t\t\t<li>tf.keras.layers.Dropout(0.2) : overfitting을 방지하기 위한 방법 중 하나로 입력층과 은닉층의 총 노드 수의 0.2%를 생략 하고 학습함. \r\n\t\t\t\t\t주로 0.2~0.5를 많이 사용함.</li>\r\n\t\t\t\t<li>활성화 함수 'softmax'는 주로 클래스 값이 3개 이상인 데이터에 마지막 Dense(출력값)에 주로 쓰인다. \r\n\t\t\t\t\t위 코드를 보면 총 10개의 확률을 반환(전체 확률의 합은 1)하며, 각 노드는 현재 이미지가 10개의 클래스 중 하나에 속할 확률을 출력한다.</li>\r\n\t\t\t\t<li>model.compile : 모델을 훈련하기 전에 필요한 몇 가지 설정이  추가된다.</li>\r\n\t\t\t\t<li>optimizer : 데이터와 손실 함수를 바탕으로 모델의 업데이트 방법을 결정</li>\r\n\t\t\t\t<li>loss : Loss function. 훈련하는 동안 모델의 오차를 측정. 모델의 학습이 올바른 방향으로 향하도록 이 함수를 최소화해야함.</li>\r\n\t\t\t\t<li>metrics : 훈련 단계와 테스트 단계를 모니터링하기 위한 지표 설정.  accuracy(정확도), MSE, MAE (오차의평균) 등이 있음.</li>\r\n\t\t\t\t<li>epochs : 지금까지의 과정 반복 횟수</li>\r\n\t\t\t</ul>\r\n\r\n\r\n\t\t</>\r\n\t);\r\n}\t\r\n","import React from 'react';\r\nimport SyntaxHighlighter from \"react-syntax-highlighter\";\r\nimport { docco } from 'react-syntax-highlighter/dist/esm/styles/hljs';\r\n\r\n\r\nfunction AI() {\r\n\treturn (\r\n    <>\r\n\t\t\t<div>\r\n          <Contents />\r\n      </div>\r\n    </>\r\n\t);\r\n};\r\n\r\nexport default AI;\r\n\r\nfunction Contents() {\r\n\tconst title = 'Artificial Intelligence';\r\n\r\n\treturn (\r\n\t\t<>\r\n\t\t\t<h1>{title}</h1>\t\r\n\r\n\t\t\t<hr className='class-1'/>\r\n\t\t\t<h3 className='h5style'><b><u>인공지능(AI, artificial intelligence)</u></b></h3>\t\r\n\r\n\t\t\t<hr className='class-1'/>\r\n\t\t\t<img src=\"../images/AI/47.PNG\" width={'900'} alt=''/><br/>\r\n\t\t\t<hr className='class-1'/>\r\n\t\t\t<img src=\"../images/AI/48.PNG\" width={'900'} alt=''/><br/>\r\n\t\t\t<hr className='class-1'/>\r\n\t\t\t<img src=\"../images/AI/49.PNG\" width={'900'} alt=''/><br/>\r\n\t\t\t<hr className='class-1'/>\r\n\t\t\t<img src=\"../images/AI/50.PNG\" width={'900'} alt=''/><br/>\r\n\t\t\t<hr className='class-1'/>\r\n\t\t\t<img src=\"../images/AI/51.PNG\" width={'900'} alt=''/><br/>\r\n\t\t\t<hr className='class-1'/>\r\n\t\t\t<img src=\"../images/AI/52.PNG\" width={'900'} alt=''/><br/>\r\n\t\t\t<hr className='class-1'/>\r\n\t\t\t<img src=\"../images/AI/53.PNG\" width={'900'} alt=''/><br/>\r\n\t\t\t<hr className='class-1'/>\r\n\t\t\t<img src=\"../images/AI/54.PNG\" width={'900'} alt=''/><br/>\r\n\t\t\t<hr className='class-1'/>\r\n\t\t\t<img src=\"../images/AI/55.PNG\" width={'900'} alt=''/><br/>\r\n\t\t\t<hr className='class-1'/>\r\n\t\t\t<img src=\"../images/AI/56.PNG\" width={'900'} alt=''/><br/>\r\n\t\t\t<hr className='class-1'/>\r\n\t\t\t<img src=\"../images/AI/57.PNG\" width={'900'} alt=''/><br/>\r\n\t\t\t<hr className='class-1'/>\r\n\t\t\t<img src=\"../images/AI/58.PNG\" width={'900'} alt=''/><br/>\r\n\t\t\t<hr className='class-1'/>\r\n\t\t\t<img src=\"../images/AI/59.PNG\" width={'900'} alt=''/><br/>\r\n\t\t\t<hr className='class-1'/>\r\n\t\t\t<img src=\"../images/AI/60.PNG\" width={'900'} alt=''/><br/>\r\n\t\t\t<hr className='class-1'/>\r\n\t\t\t<img src=\"../images/AI/61.PNG\" width={'900'} alt=''/><br/>\r\n\t\t\t<hr className='class-1'/>\r\n\t\t\t<img src=\"../images/AI/62.PNG\" width={'900'} alt=''/><br/>\r\n\t\t\t<hr className='class-1'/>\r\n\t\t\t<img src=\"../images/AI/63.PNG\" width={'900'} alt=''/><br/>\r\n\t\t\t<hr className='class-1'/>\r\n\t\t\t<img src=\"../images/AI/64.PNG\" width={'900'} alt=''/><br/>\r\n\t\t\t<hr className='class-1'/>\r\n\t\t\t<img src=\"../images/AI/65.PNG\" width={'900'} alt=''/><br/>\r\n\t\t\t<hr className='class-1'/>\r\n\t\t\t<img src=\"../images/AI/66.PNG\" width={'900'} alt=''/><br/>\r\n\t\t\t<hr className='class-1'/>\r\n\t\t\t<img src=\"../images/AI/67.PNG\" width={'900'} alt=''/><br/>\r\n\t\t\t<hr className='class-1'/>\r\n\t\t\t<img src=\"../images/AI/68.PNG\" width={'900'} alt=''/><br/>\r\n\t\t\t<hr className='class-1'/>\r\n\t\t\t<img src=\"../images/AI/69.PNG\" width={'900'} alt=''/><br/>\r\n\t\t\t<hr className='class-1'/>\r\n\t\t\t<img src=\"../images/AI/70.PNG\" width={'900'} alt=''/><br/>\r\n\t\t\t<hr className='class-1'/>\r\n\t\t\t<img src=\"../images/AI/71.PNG\" width={'900'} alt=''/><br/>\r\n\t\t\t<hr className='class-1'/>\r\n\t\t\t<img src=\"../images/AI/72.PNG\" width={'900'} alt=''/><br/>\r\n\t\t\t<hr className='class-1'/>\r\n\t\t\t<img src=\"../images/AI/73.PNG\" width={'900'} alt=''/><br/>\r\n\t\t\t<hr className='class-1'/>\r\n\t\t\t<img src=\"../images/AI/74.PNG\" width={'900'} alt=''/><br/>\r\n\t\t\t<hr className='class-1'/>\r\n\t\t\t<img src=\"../images/AI/75.PNG\" width={'900'} alt=''/><br/>\r\n\t\t\t<hr className='class-1'/>\r\n\t\t\t<img src=\"../images/AI/76.PNG\" width={'900'} alt=''/><br/>\r\n\t\t\t<hr className='class-1'/>\r\n\t\t\t<img src=\"../images/AI/77.PNG\" width={'900'} alt=''/><br/>\r\n\t\t\t<hr className='class-1'/>\r\n\t\t\t<img src=\"../images/AI/78.PNG\" width={'900'} alt=''/><br/>\r\n\t\t\t<hr className='class-1'/>\r\n\t\t\t<img src=\"../images/AI/79.PNG\" width={'900'} alt=''/><br/>\r\n\t\t\t<hr className='class-1'/>\r\n\t\t\t<img src=\"../images/AI/80.PNG\" width={'900'} alt=''/><br/>\r\n\r\n\r\n\t\t</>\r\n\t);\r\n}\t\r\n","import React  from 'react';\n\nconst CH1 = () => {\n\treturn (\n    <>\n      <div>\n          <Contents />\n      </div>\n    </>\n\t);\n};\n\nexport default CH1;\n\nfunction Contents() {\n\tconst title = 'What is deep learning?';\n\n\treturn (\n\t\t<>\n\t\t\t<h1>{title}</h1>\t\n\n\t\t\t<hr className='class-1'/>\n\t\t\t<h3 className='h5style'><b><u>딥러닝</u></b></h3>\n\t\t\t<ul>\n\t\t\t</ul>\n\t\t\t\n\t\t\t<h3 className='h5style'><b><u>Convolutional neural network(CNN, 합성곱 신경망)</u></b></h3>\n\t\t\t<ul>\n\t\t\t\t<li>컨벌루션 계층은 사전 구성된 필터를 사용하여 입력한 데이터에서 정보를 추출합니다.</li>\n\t\t\t\t<li>풀링 계층은 데이터의 차원을 줄여 데이터를 여러 부분 또는 영역으로 나눕니다.</li>\n\t\t\t\t<li>연결 계층은 계층 간에 추가 신경 경로를 생성합니다.</li>\n\t\t\t\t<li>수십 또는 수백 개의 계층을 가질 수 있으며,</li>\n\t\t\t\t<li>각 계층에 서로 다른 필터가 적용되고,</li>\n\t\t\t\t<img src=\"../images/AI/82.PNG\" width={'500'} alt=''/><br/>\n\t\t\t\t<li>계층에서는 데이터에서 특징을 추출하기 위해, 데이터를 변경시키는 연산을 한다.</li>\n\t\t\t\t<li>각 계층은 컨벌루션 계층, 활성화(ReLU) 계층, 풀링 계층으로 구성된다.</li>\n\t\t\t\t<img src=\"../images/AI/83.PNG\" width={'700'} alt=''/><br/>\n\t\t\t\t<li></li>\n\t\t\t\t<li></li>\n\t\t\t\t<li></li>\n\t\t\t\t<li></li>\n\t\t\t\t<li></li>\n\t\t\t\t<li></li>\n\t\t\t\t<li></li>\n\t\t\t\t<li></li>\n\t\t\t</ul>\n\t\t\t<h3 className='h5style'><b><u>RNN 아키텍처 </u></b></h3>\n\t\t\t<ul>\n\t\t\t\t<li>컨벌루션 계층은 사전 구성된 필터를 사용하여 입력한 데이터에서 정보를 추출합니다.</li>\n\t\t\t\t<li>풀링 계층은 데이터의 차원을 줄여 데이터를 여러 부분 또는 영역으로 나눕니다.</li>\n\t\t\t\t<li>연결 계층은 계층 간에 추가 신경 경로를 생성합니다.</li>\n\t\t\t\t<li></li>\n\t\t\t\t<li></li>\n\t\t\t\t<li></li>\n\t\t\t\t<li></li>\n\t\t\t\t<li></li>\n\t\t\t</ul>\n\t\t\t<img src=\"../images/AI/3.PNG\" width={'500'} alt=''/><br/>\n\n\t\t</>\n\t);\n}\t","import React from 'react';\r\n\r\nimport { LightAsync as SyntaxHighlighter } from 'react-syntax-highlighter';\r\nimport { defaultStyle } from 'react-syntax-highlighter/dist/esm/styles/hljs';\r\n// atelierDuneLight atelierForestLight atelierPlateauLight\r\nfunction p1_Basics_of_MLP() {\r\n\treturn (\r\n    <>\r\n      <div>\r\n          <Contents />\r\n      </div>\r\n    </>\r\n\t);\r\n};\r\n\r\nexport default p1_Basics_of_MLP;\r\n\r\nfunction Contents() {\r\n\tconst title = '1_Basics_of_MLP';\r\n\r\n\treturn (\r\n\t\t<>\r\n\t\t\t<h1>{title}</h1>\t\r\n\r\n\t\t\t<hr className='class-1'/>\r\n\t\t\t\r\n\t\t\t<h3 className='h5style'><b><u>MLP for Regression</u></b></h3>\r\n\t\t\t<p>목표: Keras를 사용하여 간단한 회귀/분류 작업을 위한 바닐라 신경망(예: 다층 퍼셉트론) 만들기</p>\r\n\t\t\t<ul>\r\n\t\t\t\t<li>각 MLP 모델은 하나의 입력 레이어, 여러 개의 숨겨진 레이어, 하나의 출력 레이어로 구성됩니다.</li>\r\n\t\t\t\t<li>각 레이어의 뉴런 수는 제한되지 않습니다.</li>\r\n\t\t\t</ul>\r\n\t\t\t<img src=\"http://cs231n.github.io/assets/nn1/neural_net.jpeg\" width={'300'} alt=''/><br/>\r\n\t\t\t<ul>\r\n\t\t\t\t<li>하나의 hidden layers가 있는 MLP</li>\r\n\t\t\t\t<li>입력 뉴런 수: 3, 숨겨진 뉴런의 수: 4, 출력 뉴런 수: 2</li>\r\n\t\t\t</ul>\r\n\t\t\t<img src=\"http://cs231n.github.io/assets/nn1/neural_net2.jpeg\" width={'400'} alt=''/><br/>\r\n\t\t\t<ul>\r\n\t\t\t\t<li>두개의 hidden layers가 있는 MLP</li>\r\n\t\t\t\t<li>입력 뉴런 수: 3, 숨겨진 뉴런의 수: (4,4) 출력 뉴런 수: 1</li>\r\n\t\t\t</ul>\r\n\r\n\t\t\t<hr className='class-1'/>\r\n\t\t\t\r\n\t\t\t<p><b>데이터 로드</b></p>\r\n\r\n\t\t\t<SyntaxHighlighter language=\"python\" style={defaultStyle} showLineNumbers={true}>\r\n\t\t\t\t{`from keras.datasets import boston_housing\r\nfrom keras.models import Sequential\r\nfrom keras.layers import Activation, Dense\r\nfrom keras import optimizers\r\n\r\n# data load\r\n(X_train, y_train), (X_test, y_test) = boston_housing.load_data()\r\n\r\nprint(X_train.shape) # (404, 13)\r\nprint(X_test.shape)  # (102, 13)\r\nprint(y_train.shape) # (404,)\r\nprint(y_test.shape)  # (102,)\t`}\r\n\t\t\t</SyntaxHighlighter>\r\n\r\n\t\t\t<p><b>모델 구축방법(1)</b></p>\r\n\r\n\t\t\t<SyntaxHighlighter language=\"python\" style={defaultStyle} showLineNumbers={true}>\r\n\t\t\t{`model = Sequential()\r\nmodel.add(Dense(10, input_shape = (13,)))    \r\nmodel.add(Activation('sigmoid'))\r\nmodel.add(Dense(10))                         \r\nmodel.add(Activation('sigmoid'))\r\nmodel.add(Dense(10))                         \r\nmodel.add(Activation('sigmoid'))\r\nmodel.add(Dense(1))\t\t\t`}\r\n\t\t\t</SyntaxHighlighter>\r\n\r\n\t\t\t<p><b>모델 구축방법(2)</b></p>\r\n\r\n\t\t\t<SyntaxHighlighter language=\"python\" style={defaultStyle} showLineNumbers={true}>\r\n\t\t\t{`# This is equivalent to the above code block\r\nmodel.add(Dense(units=10, input_shape = (13,), activation = 'sigmoid'))\r\nmodel.add(Dense(units=10, activation = 'sigmoid'))\r\nmodel.add(Dense(units=10, activation = 'sigmoid'))\r\nmodel.add(Dense(1))`}\r\n\t\t\t</SyntaxHighlighter>\r\n\r\n\t\t\t<SyntaxHighlighter language=\"python\" style={defaultStyle} showLineNumbers={true}>\r\n{`sgd = optimizers.SGD(lr = 0.01)    # stochastic gradient descent optimizer\r\nmodel.compile(optimizer = sgd, loss = 'mean_squared_error', metrics = ['mse'])   model.summary()`}\r\n\t\t\t</SyntaxHighlighter>\r\n\r\n\t\t\t<p><b>모델 Training</b></p>\r\n\t\t\t<SyntaxHighlighter language=\"python\" style={defaultStyle} showLineNumbers={true}>\r\n\t\t\t{`model.fit(X_train, y_train, batch_size = 50, epochs = 100, verbose = 1)`}\r\n\t\t\t</SyntaxHighlighter>\r\n\r\n\t\t\t<p><b>모델 평가</b></p>\t\r\n\t\t\t<SyntaxHighlighter language=\"python\" style={defaultStyle} showLineNumbers={true}>\r\n\t\t\t{`results = model.evaluate(X_test, y_test)`}\r\n\t\t\t</SyntaxHighlighter>\r\n\r\n\t\t\t<p><b>결과 출력</b></p>\t\r\n\t\t\t<SyntaxHighlighter language=\"python\" style={defaultStyle} showLineNumbers={true}>\r\n{`print(model.metrics_names)     # list of metric names the model is employing\r\nprint(results)                 # actual figure of metrics computed\r\n\r\nprint('loss: ', results[0])\r\nprint('mse: ', results[1])\t\t\t`}\r\n    \t</SyntaxHighlighter>\r\n\r\n\t\t\t<hr className='class-1'/>\r\n\t\t\t<p><b>위 코드 설명</b></p>\r\n\t\t\t<ul>\r\n\t\t\t\t<li>Keras 모델 객체는 Sequential 클래스로 생성</li>\r\n\t\t\t\t<li>처음에는 모델이 비어 있고, model.add로 레이어를 추가한다.</li>\r\n\t\t\t\t<li>10개의 뉴런이 있는 2개의 은닉층이 있는 Keras 모델</li>\r\n\t\t\t\t<li>Input layer 는 input_shape 을 써야한다</li>\r\n\t\t\t\t<li>Hidden layer 는 output 크기(10개)만 쓴다</li>\r\n\t\t\t\t<li>Output layer 는 회귀 문제이므로 출력 차원 = 1</li>\r\n\t\t\t\t<li>모델 컴파일러에 손실 유형(함수) 및 옵티마이저를 지정해야 한다. 회귀 문제의 경우 평균 제곱 오차(MSE)가 종종 사용됩니다.</li>\r\n\t\t\t</ul>\r\n\r\n\t\t\t<hr className='class-1'/>\r\n\t\t\t<p><b><u>Dense 레이어 설명</u></b></p>\r\n\t\t\t<ul>\r\n\t\t\t\t<li>뉴런의 입력과 출력을 연결해주는 역할</li>\r\n\t\t\t\t<li>입력 뉴런이 4개, 출력 뉴런이 8개라면 총 연결선은 4 x 8 = 32개 이다. </li>\r\n\t\t\t\t<li>각 연결선은 가중치(weight) 를 포함하고 있는데 뉴런의 시냅스처럼 입력 값에 대한 연결 강도와 같습니다.</li>\r\n\t\t\t\t<li>weight가 클 수록 입력값이 출력값에 미치는 영향이 커지고, 작을 수록 영향이 작다. </li>\r\n\t\t\t\t<li>남여 판별에서, 입력값이 머리카락길이, 키, 혈액형 등이라고 할 때, \r\n\t\t\t\t\t머리길이의 가중치는 크고, 키의 가중치는 중간, 혈액형의 가중치는 가장 낮을 것입니다. </li>\r\n\t\t\t\t<li>딥러닝 학습과정에서는 이러한 가중치들을 계속 조정을 하며 최적값을 찾는다.</li>\r\n\t\t\t\t<li>\r\n\t\t\t\t\t<SyntaxHighlighter language=\"python\" style={defaultStyle} showLineNumbers={true}>\r\n\t\t\t\t\t{`Dense(units=8, input_dim = 4, kernel_initializer = 'uniform', activation = 'relu')`}\r\n\t\t\t\t\t</SyntaxHighlighter>\r\n\t\t\t\t</li>\r\n\t\t\t\t<ul>\r\n\t\t\t\t\t<li><u><b>첫번째 인자(units): 출력 뉴런의 수를 설정합니다.</b></u></li>\r\n\t\t\t\t\t<li>input_dim : 입력 뉴련의 수를 설정합니다.</li>\r\n\t\t\t\t\t<li>kernel_initializer : 가중치를 초기화하는 방법을 설정합니다.\r\n\t\t\t\t\t\t<ul>\r\n\t\t\t\t\t\t\t<li>uniform : 균일 분포</li>\r\n\t\t\t\t\t\t\t<li>normal : 가우시안 분포</li>\r\n\t\t\t\t\t\t</ul>\r\n\t\t\t\t\t</li>\r\n\t\t\t\t\t<li>activation : 활성화함수를 설정합니다\r\n\t\t\t\t\t\t<ul>\r\n\t\t\t\t\t\t\t<li>linear : 디폴트 값으로 입력값과 가중치로 계산된 결과 값이 그대로 출력으로 나옵니다</li>\r\n\t\t\t\t\t\t\t<li>sigmoid : 시그모이드 함수로 이진분류에서 출력층에 주로 쓰입니다</li>\r\n\t\t\t\t\t\t\t<li>softmax : 소프드맥스 함수로 다중클래스 분류문제에서 출력층에 주로 쓰입니다.</li>\r\n\t\t\t\t\t\t\t<li>relu: Rectified Linear Unit 함수로 은닉층에서 주로 쓰입니다.</li>\r\n\t\t\t\t\t\t</ul>\r\n\r\n\t\t\t\t\t</li>\r\n\t\t\t\t\t<li>Dense 레이어는 입력 뉴런 수에 관계 없이 출력 뉴런 수를 자연스럽게 설정할 수 있어 출력층으로 많이 사용됩니다. </li>\r\n\t\t\t\t\t<li>분류 문제에서는 0과 1을 나타내는 출력 뉴런이 1개만 있으면 되기 때문에, 입력값과 가중치의 계산값을 0과 1사이로 표현하는 활성화 함수인 sigmoid를 사용합니다.</li>\r\n\t\t\t\t</ul>\r\n\t\t\t</ul>\r\n\r\n\t\t\t\t<ul>\r\n\t\t\t\t\t<li>\r\n\t\t\t\t\t\t<SyntaxHighlighter language=\"python\" style={defaultStyle} showLineNumbers={true}>\r\n\t\t\t\t\t\t{`# 이진분류 문제에서 입력값이 3개인 경우, 출력층으로 사용된 Dense 레이어\r\nDense(1, input_dim = 3, activation = 'sigmoid')`}\r\n\t\t\t\t\t\t</SyntaxHighlighter>\r\n\t\t\t\t\t\t</li>\r\n\t\t\t\t\t\t<img src=\"../../images/programs/MLP/1.PNG\" width={'700'} alt=''/><br/>\r\n\r\n\t\t\t\t\t<li>다중클래스 분류문제에서는 클래스 수만큼 출력 뉴런이 필요합니다.</li>\r\n\t\t\t\t\t<li>만약 세가지 종류로 분류한다면, 아래 코드처럼 출력 뉴런이 3개이고, </li>\r\n\t\t\t\t\t<li>\r\n\t\t\t\t\t<SyntaxHighlighter language=\"python\" style={defaultStyle} showLineNumbers={true}>\r\n\t\t\t\t\t\t{`# 다중분류(3종류) 문제에서 입력값이(4), 출력층(3) 인 경우 시냅스강도(곱)은 4x3=12 인 Dense 레이어\r\nDense(1, input_dim = 4, activation = 'softmax')`}\r\n\t\t\t\t\t\t</SyntaxHighlighter>\r\n\t\t\t\t\t\t</li>\r\n\t\t\t\t\t\t<img src=\"../../images/programs/MLP/2.PNG\" width={'700'} alt=''/><br/>\r\n\t\t\t\t</ul>\r\n\r\n\t\t\t\t<ul>\r\n\t\t\t\t\t<li>단일분류(1종류) 문제에서 입력값이(4), 출력층(1), 입력 1층 + 히든 2층 + 출력 Dense 레이어</li>\r\n\t\t\t\t\t<li>만약 세가지 종류로 분류한다면, 아래 코드처럼 출력 뉴런이 3개이고, </li>\r\n\t\t\t\t\t<li>\r\n\t\t\t\t\t<SyntaxHighlighter language=\"python\" style={defaultStyle} showLineNumbers={true}>\r\n\t\t\t\t\t\t{`# 단일분류(1종류) 문제에서 입력값이(4), 출력층(1), 입력 1층 + 히든 2층 + 출력 Dense 레이어\r\nmodel.add(Dense(units=8, input_dim=4, init='uniform', activation='relu'))\r\nmodel.add(Dense(units=6, init='uniform', activation='relu'))\r\nmodel.add(Dense(units=1, init='uniform', activation='sigmoid'))`}\r\n\t\t\t\t\t\t</SyntaxHighlighter>\r\n\t\t\t\t\t\t</li>\r\n\t\t\t\t\t\t<img src=\"../../images/programs/MLP/3.PNG\" width={'700'} alt=''/><br/>\r\n\t\t\t\t</ul>\r\n\r\n\t\t\t\t<p><b><u>Input neurons(uint)</u></b></p>\r\n\t\t\t\t<ul>\r\n\t\t\t\t\t<li>예: 데이터셋의 경우, 28x28 이미지의 경우 28x28=784가 Feature수이고 이것이 입력뉴런수이다.</li>\r\n\t\t\t\t\t<li>Input neurons의 수는 결국 네가 사용하고자 하는 Feature의 수와 동일합니다.</li>\r\n\t\t\t\t\t<li></li>\r\n\t\t\t\t</ul>\r\n\r\n\t\t\t\t<p><b><u>Output neurons</u></b></p>\r\n\t\t\t\t<ul>\r\n\t\t\t\t\t<li>Output neurons의 수는, 예측하고자 하는 경우의 수입니다.</li>\r\n\t\t\t\t\t<li>회귀(Regression): 회귀의 경우, Output은 단일값입니다.</li>\r\n\t\t\t\t\t<li>분류(Classification): Binary classification경우, Output은 단일값입니다.</li>\r\n\t\t\t\t\t<li>Multi-class classification(Object detection 등)의 경우: </li>\r\n\t\t\t\t</ul>\r\n\r\n\t\t\t\t<p><b><u>keras.models.Sequential 에서 알아야 할 것</u></b></p>\r\n\t\t\t\t<ul>\r\n\t\t\t\t\t<li>keras.layers.Flatten : 입력 데이터를 1차원으로 평탄화(flatten)</li>\r\n\t\t\t\t\t<li>keras.layers.Dense : connected layer, 입력 벡터와 가중치 행렬의 곱셈에 편향을 더하여, 활성화 함수를 거친 출력 값을 계산</li>\r\n\t\t\t\t\t<li>keras.layers.Dropout</li>\r\n\t\t\t\t\t<li></li>\r\n\t\t\t\t</ul>\r\n\t\t\t\t<p><b><u><h3>keras.layers에서 units, dim, input_shape, 등의 차이를 어떻게 ?</h3></u></b></p>\r\n\t\t\t\t<p><b><u><h3>units ?</h3></u></b></p>\r\n\t\t\t\t\t<ul>\r\n\t\t\t\t\t\t<li></li>\r\n\t\t\t\t\t\t<li></li>\r\n\t\t\t\t\t\t<li></li>\r\n\t\t\t\t\t\t<li></li>\r\n\t\t\t\t\t\t<li></li>\r\n\t\t\t\t\t\t<li></li>\r\n\t\t\t\t\t\t<li></li>\r\n\t\t\t\t\t</ul>\r\n\t\t\t\t<p><b><u><h3>Keras 레이어의 모양 ?</h3></u></b></p>\r\n\t\t\t\t\t<ul>\r\n\t\t\t\t\t\t<li></li>\r\n\t\t\t\t\t\t<li></li>\r\n\t\t\t\t\t\t<li></li>\r\n\t\t\t\t\t\t<li></li>\r\n\t\t\t\t\t\t<li></li>\r\n\t\t\t\t\t\t<li></li>\r\n\t\t\t\t\t\t<li></li>\r\n\t\t\t\t\t</ul>\r\n\t\t\t\t<p><b><u><h3>input_shape ?</h3></u></b></p>\r\n\t\t\t\t\t<ul>\r\n\t\t\t\t\t\t<li>입력 데이터의 차원</li>\r\n\t\t\t\t\t\t<li>모델 Layer의 첫 번째 레이어에만 온다.</li>\r\n\t\t\t\t\t\t<li>두번째 이후의 Layer에서는 자동으로 추정 된다.</li>\r\n\t\t\t\t\t\t<li></li>\r\n\t\t\t\t\t\t<li></li>\r\n\t\t\t\t\t\t<li></li>\r\n\t\t\t\t\t\t<li></li>\r\n\t\t\t\t\t</ul>\r\n\t\t\t\t<p><b><u><h3>input_dim ?</h3></u></b></p>\r\n\t\t\t\t\t<ul>\r\n\t\t\t\t\t\t<li></li>\r\n\t\t\t\t\t\t<li></li>\r\n\t\t\t\t\t\t<li></li>\r\n\t\t\t\t\t\t<li></li>\r\n\t\t\t\t\t\t<li></li>\r\n\t\t\t\t\t\t<li></li>\r\n\t\t\t\t\t\t<li></li>\r\n\t\t\t\t\t</ul>\r\n\t\t\t\t<p><b><u><h3>weights ?</h3></u></b></p>\r\n\t\t\t\t\t<ul>\r\n\t\t\t\t\t\t<li></li>\r\n\t\t\t\t\t\t<li></li>\r\n\t\t\t\t\t\t<li></li>\r\n\t\t\t\t\t\t<li></li>\r\n\t\t\t\t\t\t<li></li>\r\n\t\t\t\t\t\t<li></li>\r\n\t\t\t\t\t\t<li></li>\r\n\t\t\t\t\t</ul>\r\n\t\t\t\t<p><b><u><h3>activation ?</h3></u></b></p>\r\n\t\t\t\t\t<ul>\r\n\t\t\t\t\t\t<li></li>\r\n\t\t\t\t\t\t<li></li>\r\n\t\t\t\t\t\t<li></li>\r\n\t\t\t\t\t\t<li></li>\r\n\t\t\t\t\t\t<li></li>\r\n\t\t\t\t\t\t<li></li>\r\n\t\t\t\t\t\t<li></li>\r\n\t\t\t\t\t</ul>\r\n\t\t\t\t<img src=\"../../images/programs/MLP/4.PNG\" width={'700'} alt=''/><br/>\r\n\t\t\t\t<SyntaxHighlighter language=\"python\" style={defaultStyle} showLineNumbers={true}>\r\n\t\t\t\t\t\t{`model.add(Input(shape=(3,))) # Input tensor\r\nmodel.add(Dense(units=4)) # hidden layer 1\r\nmodel.add(Dense(units=4)) #hidden layer 2\r\nmodel.add(Dense(units=1)) #output layer `}\r\n\t\t\t\t\t</SyntaxHighlighter>\r\n\r\n\r\n\r\n{/* --------------------------------------------------------------------------------- */}\r\n\t\t\t<hr className='class-1'/>\r\n\t\t\t\r\n\t\t\t<h3 className='h5style'><b><u>MLP for classification</u></b></h3>\r\n\t\t\t<ul>\r\n\t\t\t\t<li>손실함수는 교차엔트로피(cross-entropy)를 사용</li>\r\n\t\t\t\t<li>평가지표는 정확도(accuracy)를 주로 사용</li>\r\n\t\t\t</ul>\r\n\t\t\t<SyntaxHighlighter language=\"python\" style={defaultStyle} showLineNumbers={true}>\r\n\t\t\t\t{`from keras.datasets import cifar10\r\nfrom keras.utils import to_categorical\r\n\r\n# data load\r\n(x_train, y_train), (x_test, y_test) = cifar10.load_data()\r\nx_train, x_test = x_train.reshape(x_train.shape[0], -1), x_test.reshape(x_test.shape[0], -1)\r\ny_train, y_test = to_categorical(y_train), to_categorical(y_test)\r\n\r\nprint(x_train.shape, x_test.shape, y_train.shape, y_test.shape)\r\n# (50000, 3072) (10000, 3072) (50000, 10) (10000, 10)\t\t\t`}\r\n\t\t\t</SyntaxHighlighter>\r\n\r\n\r\n\t\t\t<p><b>1. Creating a model</b></p>\r\n\r\n\t\t\t<ul>\r\n\t\t\t\t<li>회귀 모델과 동일</li>\r\n\t\t\t\t<li>Keras 모델 객체는 Sequential 클래스로 생성</li>\r\n\t\t\t\t<li>처음에는 모델이 비어 있고, model.add로 레이어를 추가한다.</li>\r\n\t\t\t\t<li>50개의 뉴런이 있는 2개의 은닉층이 있는 Keras 모델</li>\r\n\t\t\t\t<li>Input layer 는 input_shape 을 써야한다</li>\r\n\t\t\t\t<li>Hidden layer 는 output 크기(50개)</li>\r\n\t\t\t\t<li>Output layer 출력 차원 = 10</li>\r\n\t\t\t\t<li></li>\r\n\t\t\t\t<li></li>\r\n\t\t\t</ul>\r\n\t\t\t<SyntaxHighlighter language=\"python\" style={defaultStyle} showLineNumbers={true}>\r\n\t\t\t{`model = Sequential()\r\nmodel.add(Dense(50, input_shape = (x_train.shape[-1],)))\r\nmodel.add(Activation('sigmoid'))\r\nmodel.add(Dense(50))                         \r\nmodel.add(Activation('sigmoid'))\r\nmodel.add(Dense(50))                         \r\nmodel.add(Activation('sigmoid'))\r\nmodel.add(Dense(10))\t\t\t`}\r\n\t\t\t</SyntaxHighlighter>\r\n\r\n\t\t\t<p><b>모델 구축방법(2)</b></p>\r\n\r\n\t\t\t<SyntaxHighlighter language=\"python\" style={defaultStyle} showLineNumbers={true}>\r\n\t\t\t{`# This is equivalent to the above code block\r\nmodel.add(Dense(50, input_shape = (x_train.shape[-1],), activation = 'sigmoid'))\r\nmodel.add(Dense(50, activation = 'sigmoid'))\r\nmodel.add(Dense(50, activation = 'sigmoid'))\r\nmodel.add(Dense(10))`}\r\n</SyntaxHighlighter>\r\n\r\n<SyntaxHighlighter language=\"python\" style={defaultStyle} showLineNumbers={true}>\r\n{`sgd = optimizers.SGD(lr = 0.01)    # stochastic gradient descent optimizer\r\nmodel.compile(optimizer = sgd, loss = 'categorical_crossentropy', metrics = ['accuracy'])`}\r\n</SyntaxHighlighter>\r\n\r\n<p>모델 컴파일러에 손실 유형(함수) 및 옵티마이저를 지정해야 한다. 회귀 문제의 경우 평균 제곱 오차(MSE)가 종종 사용됩니다.</p>\r\n\r\n<p><b>모델 Training</b></p>\r\n<SyntaxHighlighter language=\"python\" style={defaultStyle} showLineNumbers={true}>\r\n{`model.fit(x_train, y_train, batch_size = 128, epochs = 50, verbose = 1)`}\r\n</SyntaxHighlighter>\r\n\r\n<p><b>모델 평가</b></p>\r\n<SyntaxHighlighter language=\"python\" style={defaultStyle} showLineNumbers={true}>\r\n{`results = model.evaluate(x_test, y_test)`}\r\n</SyntaxHighlighter>\r\n\r\n<SyntaxHighlighter language=\"python\" style={defaultStyle} showLineNumbers={true}>\r\n{`print(model.metrics_names)     # list of metric names the model is employing\r\nprint(results)                 # actual figure of metrics computed\r\n\r\nprint('loss: ', results[0])\r\nprint('mse: ', results[1])\t\t\t`}\r\n    \t</SyntaxHighlighter>\r\n\t\t\t\r\n\r\n\r\n\t\t</>\r\n\t);\r\n}\t\r\n","import React from 'react';\r\n\r\n\r\nfunction P1_1_regression() {\r\n\treturn (\r\n    <>\r\n      <div>\r\n          <Contents />\r\n      </div>\r\n    </>\r\n\t);\r\n};\r\n\r\nexport default P1_1_regression;\r\n\r\nfunction Contents() {\r\n\tconst title = '1_1_regression';\r\n\r\n\treturn (\r\n\t\t<>\r\n\t\t\t<h1>{title}</h1>\t\r\n\r\n\t\t\t<hr className='class-1'/>\r\n\r\n\t\t\t\r\n\t\t</>\r\n\t);\r\n}\t\r\n","import React from 'react';\r\n\r\n\r\nfunction ch1_1() {\r\n\treturn (\r\n    <>\r\n      <div>\r\n          <Contents />\r\n      </div>\r\n    </>\r\n\t);\r\n};\r\n\r\nexport default ch1_1;\r\n\r\nfunction Contents() {\r\n\tconst title = '1. Introduction';\r\n\r\n\treturn (\r\n\t\t<>\r\n\t\t\t<h1>{title}</h1>\t\r\n\r\n\t\t\t<hr className='class-1'/>\r\n\t\t\t<h3 className='h5style'><b><u>1.1. Neuro Computing이란 무엇입니까?</u></b></h3>\t\r\n\t\t\t<img src=\"../../images/neurocomputing/ch1/0.PNG\" width={'500'} alt=''/><br/>\r\n\t\t\t<p>먼저 Artificial Intelligence(AI), Machine Learning(ML), Deep Learning(DL), Neurocomputing 의 차이점에 대해 논의해 보겠습니다. \r\n\t\t\t\t오늘날 이러한 용어는 거의 같은 의미로 사용되지만 역사적, 방법론적 차이가 있습니다.</p>\r\n\t\t\t<p>인공 지능이라는 용어는 1956년 다트머스 인공 지능 여름 연구 프로젝트에서 존 매카시(John McCarthy)에 의해 만들어졌습니다 .</p>\r\n\r\n\t\t\t<p><b>머신러닝 (ML)</b>은 예시 (데이터 기반 AI)를 통한 학습 에 중점을 두는 AI의 한 분야입니다 .</p>\r\n\t\t\t<p>빅 데이터, 데이터 과학, 운영 연구, 패턴 인식이라고도 합니다. ML 알고리즘에는 다음이 포함됩니다.</p>\r\n\t\t\t<ul>\r\n\t\t\t\t<li>인공 신경망(다층 퍼셉트론)</li>\r\n\t\t\t\t<li>통계분석(베이지안 모델링, PCA)</li>\r\n\t\t\t\t<li>클러스터링 알고리즘(k-평균, GMM, 스펙트럼 클러스터링)</li>\r\n\t\t\t\t<li>지원 벡터 머신</li>\r\n\t\t\t\t<li>의사결정 트리, 랜덤 포레스트</li>\r\n\t\t\t</ul>\r\n\r\n\t\t\t<p><b>딥러닝(Deep Learning)</b>은 최근 인공 신경망을 리브랜딩한 것입니다. \r\n\t\t\t고도로 비선형적인 신경망을 사용하여 데이터의 높은 수준의 표현을 학습하는 데 중점을 둡니다. \r\n\t\t\t다음을 포함하여 많은 아키텍처가 개발되었습니다.</p>\r\n\r\n\t\t\t<ul>\r\n\t\t\t\t<li>심층 신경망(DNN)</li>\r\n\t\t\t\t<li>CNN(컨벌루션 신경망)</li>\r\n\t\t\t\t<li>순환 신경망(RNN)</li>\r\n\t\t\t\t<li>생성 모델(GAN, VAE)</li>\r\n\t\t\t\t<li>심층 강화 학습(DQN, PPO, AlphaGo)</li>\r\n\t\t\t\t<li>트랜스포머</li>\r\n\t\t\t\t<li>그래프 신경망</li>\r\n\t\t\t</ul>\r\n\r\n\t\t\t<p><b>신경컴퓨팅(NeuroComputing)</b>은 계산 신경과학과 인공 신경망(딥 러닝)의 교차점에 있습니다.</p>\r\n\t\t\t<p>인간 인지의 기본 메커니즘을 인공 지능으로 가져오는 것을 목표로 합니다. </p>\r\n\t\t\t<ul>\r\n\t\t\t\t<li>딥 러닝에 중점을 두고</li>\r\n\t\t\t\t<li>보다 생물학적 신경망이 더 가까운 AI 시스템을 설계</li>\r\n\t\t\t</ul>\r\n\t\t\t<img src=\"../../images/neurocomputing/ch1/1.PNG\" width={'500'} alt=''/><br/>\r\n\r\n\t\t\t<hr className='class-1'/>\r\n\t\t\t<h3 className='h5style'><b><u>1.2. 딥러닝의 응용</u></b></h3>\t\r\n\r\n\t\t\t<p>기계 학습 애플리케이션은 일반적으로 세 가지 주요 분기로 나뉩니다.</p>\r\n\t\t\t<ul>\r\n\t\t\t\t<li><b>지도 학습</b> : 프로그램은 사전 정의된 훈련 예제 세트에 대해 훈련되고 새로운 데이터가 제공될 때 올바른 예측을 하는 데 사용됩니다.</li>\r\n\t\t\t\t<li><b>비지도 학습</b> : 프로그램에는 많은 데이터가 제공되며 그 안에서 패턴과 관계를 찾아야 합니다.</li>\r\n\t\t\t\t<li><b>강화 학습</b> : 프로그램은 행동을 생성하고 보상을 받음으로써 환경을 탐색합니다.</li>\r\n\t\t\t</ul>\r\n\t\t\t<img src=\"../../images/neurocomputing/ch1/2.PNG\" width={'700'} alt=''/><br/>\r\n\t\t\t<p>딥러닝은 최근 머신러닝에 혁명을 일으켰습니다.</p>\r\n\t\t\t<img src=\"../../images/neurocomputing/ch1/3.PNG\" width={'400'} alt=''/><br/>\r\n\t\t\t<p></p>\r\n\r\n\t\t\t<p></p>\r\n\r\n\t\t</>\r\n\t);\r\n}\t\r\n","import React from 'react';\r\n\r\n\r\nfunction ch1_2() {\r\n\treturn (\r\n    <>\r\n      <div>\r\n          <Contents />\r\n      </div>\r\n    </>\r\n\t);\r\n};\r\n\r\nexport default ch1_2;\r\n\r\nfunction Contents() {\r\n\tconst title = 'Test';\r\n\r\n\treturn (\r\n\t\t<>\r\n\t\t\t<h1>{title}</h1>\t\r\n\r\n\t\t\t<hr className='class-1'/>\r\n\r\n\t\t\t\r\n\t\t</>\r\n\t);\r\n}\t\r\n","import React from 'react';\r\n\r\n\r\nfunction ch1_3() {\r\n\treturn (\r\n    <>\r\n      <div>\r\n          <Contents />\r\n      </div>\r\n    </>\r\n\t);\r\n};\r\n\r\nexport default ch1_3;\r\n\r\nfunction Contents() {\r\n\tconst title = 'Test';\r\n\r\n\treturn (\r\n\t\t<>\r\n\t\t\t<h1>{title}</h1>\t\r\n\r\n\t\t\t<hr className='class-1'/>\r\n\r\n\t\t\t\r\n\t\t</>\r\n\t);\r\n}\t\r\n","import React from 'react';\r\n\r\n\r\nfunction ch2_1() {\r\n\treturn (\r\n    <>\r\n      <div>\r\n          <Contents />\r\n      </div>\r\n    </>\r\n\t);\r\n};\r\n\r\nexport default ch2_1;\r\n\r\nfunction Contents() {\r\n\tconst title = 'Test';\r\n\r\n\treturn (\r\n\t\t<>\r\n\t\t\t<h1>{title}</h1>\t\r\n\r\n\t\t\t<hr className='class-1'/>\r\n\r\n\t\t\t\r\n\t\t</>\r\n\t);\r\n}\t\r\n","import React from 'react';\r\n\r\n\r\nfunction ch2_2() {\r\n\treturn (\r\n    <>\r\n      <div>\r\n          <Contents />\r\n      </div>\r\n    </>\r\n\t);\r\n};\r\n\r\nexport default ch2_2;\r\n\r\nfunction Contents() {\r\n\tconst title = 'Test';\r\n\r\n\treturn (\r\n\t\t<>\r\n\t\t\t<h1>{title}</h1>\t\r\n\r\n\t\t\t<hr className='class-1'/>\r\n\r\n\t\t\t\r\n\t\t</>\r\n\t);\r\n}\t\r\n","import React from 'react';\r\n\r\n\r\nfunction ch2_3() {\r\n\treturn (\r\n    <>\r\n      <div>\r\n          <Contents />\r\n      </div>\r\n    </>\r\n\t);\r\n};\r\n\r\nexport default ch2_3;\r\n\r\nfunction Contents() {\r\n\tconst title = 'Test';\r\n\r\n\treturn (\r\n\t\t<>\r\n\t\t\t<h1>{title}</h1>\t\r\n\r\n\t\t\t<hr className='class-1'/>\r\n\r\n\t\t\t\r\n\t\t</>\r\n\t);\r\n}\t\r\n","import React from 'react';\r\n\r\n\r\nfunction Ch0() {\r\n\treturn (\r\n    <>\r\n      <div>\r\n          <Contents />\r\n      </div>\r\n    </>\r\n\t);\r\n};\r\n\r\nexport default Ch0;\r\n\r\nfunction Contents() {\r\n\tconst title = '참고자료';\r\n\r\n\treturn (\r\n\t\t<>\r\n\t\t\t<h1>{title}</h1>\t\r\n\r\n\t\t\t<hr className='class-1'/>\r\n\t\t\t<img src=\"../images/AI/17.PNG\" width={'200'} alt=''/>\r\n\t\t\t<ul>\r\n\t\t\t\t<li><a href=\"https://dschloe.github.io/python/tensorflow2.0/googlecolab/\" target='_blank'  rel=\"noopener noreferrer\" >Google Colab Tensorflow 2.0 Installation</a></li>\r\n\t\t\t\t<li><a href=\"https://dschloe.github.io/python/tensorflow2.0/ch3_3_1_random_signoid/\" target='_blank'  rel=\"noopener noreferrer\" >Tensorflow 2.0 Tutorial ch3.3.1 - 난수 생성 및 시그모이드 함수</a></li>\r\n\t\t\t\t<li><a href=\"https://seoromin.tistory.com/7\" target='_blank'  rel=\"noopener noreferrer\" >Deep Learning - 퍼셉트론(perceptron)</a></li>\r\n\t\t\t\t<li><a href=\"https://seoromin.tistory.com/9\" target='_blank'  rel=\"noopener noreferrer\" >Deep Learning - 수치 미분</a></li>\r\n\t\t\t\t<li><a href=\"https://seoromin.tistory.com/11\" target='_blank'  rel=\"noopener noreferrer\" >Deep Learning - 신경망 학습과 손실 함수</a></li>\r\n\t\t\t\t<li><a href=\"https://seoromin.tistory.com/12\" target='_blank'  rel=\"noopener noreferrer\" >Deep Learning - 신경망과 활성화 함수</a></li>\r\n\t\t\t\t<li><a href=\"https://dschloe.github.io/python/tensorflow2.0/ch3_3_2_random_signoid_bias/\" target='_blank'  rel=\"noopener noreferrer\" >Tensorflow 2.0 Tutorial ch3.3.2 - 난수 생성 및 시그모이드 함수 편향성</a></li>\r\n\t\t\t\t<li><a href=\"https://dschloe.github.io/python/tensorflow2.0/ch3_3_3_network_and/\" target='_blank'  rel=\"noopener noreferrer\" >Tensorflow 2.0 Tutorial ch3.3.3 - 첫번째 신경망 네트워크, AND</a></li>\r\n\t\t\t\t<li><a href=\"https://dschloe.github.io/python/tensorflow2.0/ch3_3_5_network_xor/\" target='_blank'  rel=\"noopener noreferrer\" >Tensorflow 2.0 Tutorial ch3.3.5 - 세번째 신경망 네트워크 - XOR</a></li>\r\n\t\t\t\t<li><a href=\"https://dschloe.github.io/python/tensorflow2.0/ch4_1_linear_regression/\" target='_blank'  rel=\"noopener noreferrer\" >Tensorflow 2.0 Tutorial ch4.1 - 선형회귀</a></li>\r\n\t\t\t\t<li><a href=\"https://dschloe.github.io/python/tensorflow2.0/ch4_2_multiple_linear_regression/\" target='_blank'  rel=\"noopener noreferrer\" >Tensorflow 2.0 Tutorial ch4.2 - 다항 회귀</a></li>\r\n\t\t\t\t<li><a href=\"https://dschloe.github.io/python/tensorflow2.0/ch4_3_regression_with_deeplearning/\" target='_blank'  rel=\"noopener noreferrer\" >Tensorflow 2.0 Tutorial ch4.3 - 딥러닝 네트워크를 이용한 회귀</a></li>\r\n\t\t\t\t<li><a href=\"https://dschloe.github.io/python/tensorflow2.0/ch4_4_boston_housing_deeplearning/\" target='_blank'  rel=\"noopener noreferrer\" >Tensorflow 2.0 Tutorial ch4.4 - 보스턴 주택 가격 데이터세트</a></li>\r\n\t\t\t\t<li><a href=\"https://dschloe.github.io/python/tensorflow2.0/ch5_1_binary_classification/\" target='_blank'  rel=\"noopener noreferrer\" >Tensorflow 2.0 Tutorial ch5.1 - 분류</a></li>\r\n\t\t\t\t<li><a href=\"https://dschloe.github.io/python/tensorflow2.0/ch5_2_multi_classification/\" target='_blank'  rel=\"noopener noreferrer\" >Tensorflow 2.0 Tutorial ch5.2 - 다항분류</a></li>\r\n\t\t\t\t<li><a href=\"https://dschloe.github.io/python/tensorflow2.0/ch5_3_fashion_mnist/\" target='_blank'  rel=\"noopener noreferrer\" >Tensorflow 2.0 Tutorial ch5.3 - Fashion MNIST</a></li>\r\n\t\t\t\t<li><a href=\"https://dschloe.github.io/python/tensorflow2.0/ch6_1_2_cnn_theory/\" target='_blank'  rel=\"noopener noreferrer\" >Tensorflow 2.0 Tutorial ch6.1-2 - CNN 이론</a></li>\r\n\t\t\t\t<li><a href=\"https://dschloe.github.io/python/tensorflow2.0/ch6_3_fashion_mnist_with_cnn/\" target='_blank'  rel=\"noopener noreferrer\" >Tensorflow 2.0 Tutorial ch6.3 - Fashion MNIST with CNN 실습</a></li>\r\n\t\t\t\t<li><a href=\"https://dschloe.github.io/python/tensorflow2.0/ch6_4_improve_performance/\" target='_blank'  rel=\"noopener noreferrer\" >Tensorflow 2.0 Tutorial ch6.4 - 모형의 성능 높이기</a></li>\r\n\t\t\t\t<li><a href=\"https://dschloe.github.io/python/tensorflow2.0/ch7_1_2_rnn_theory1/\" target='_blank'  rel=\"noopener noreferrer\" >Tensorflow 2.0 Tutorial ch7.1 - RNN 이론 (1)</a></li>\r\n\t\t\t\t<li><a href=\"https://dschloe.github.io/python/tensorflow2.0/ch7_1_2_rnn_theory2/\" target='_blank'  rel=\"noopener noreferrer\" >Tensorflow 2.0 Tutorial ch7.1 - RNN 이론 (2)</a></li>\r\n\t\t\t\t<li><a href=\"https://dschloe.github.io/python/tensorflow2.0/ch7_3_sentimentanalysis/\" target='_blank'  rel=\"noopener noreferrer\" >Tensorflow 2.0 Tutorial ch7.3 - 긍정, 부정 감성 분석</a></li>\r\n\t\t\t\t<li><a href=\"https://dschloe.github.io/python/tensorflow2.0/ch7_4_naturallanguagegeneration1/\" target='_blank'  rel=\"noopener noreferrer\" >Tensorflow 2.0 Tutorial ch7.4 - (1) 단어 단위 생성</a></li>\r\n\t\t\t\t<li><a href=\"https://dschloe.github.io/python/tensorflow2.0/ch7_4_naturallanguagegeneration2/\" target='_blank'  rel=\"noopener noreferrer\" >Tensorflow 2.0 Tutorial ch7.4 - (2) 단어 단위 생성</a></li>\r\n\t\t\t\t<li><a href=\"https://dschloe.github.io/python/tensorflow2.0/ch8_1_tensorflow_hub/\" target='_blank'  rel=\"noopener noreferrer\" >Tensorflow 2.0 Tutorial ch8.1 - 텐서플로 허브</a></li>\r\n\t\t\t\t<li><a href=\"https://dschloe.github.io/python/tensorflow2.0/ch8_2_transfer_learning/\" target='_blank'  rel=\"noopener noreferrer\" >Tensorflow 2.0 Tutorial ch8.2 - 전이 학습과 & Kaggle 대회</a></li>\r\n\t\t\t\t<li><a href=\"https://dschloe.github.io/python/tensorflow2.0/ch8_3_1_texture_synthesis/\" target='_blank'  rel=\"noopener noreferrer\" >Tensorflow 2.0 Tutorial ch8.3.1 - 컨볼루션 신경망을 사용한 텍스처 합성</a></li>\r\n\t\t\t\t<li><a href=\"https://dschloe.github.io/python/tensorflow2.0/ch8_3_2_neural_style_transfer/\" target='_blank'  rel=\"noopener noreferrer\" >Tensorflow 2.0 Tutorial ch8.3.2 - 컨볼루션 신경망을 사용한 신경 스타일 전이</a></li>\r\n\t\t\t\t<li><a href=\"https://dschloe.github.io/python/tensorflow2.0/ch8_3_2_neural_style_transfer/\" target='_blank'  rel=\"noopener noreferrer\" >Tensorflow 2.0 Tutorial ch8.3.2 - 컨볼루션 신경망을 사용한 신경 스타일 전이</a></li>\r\n\t\t\t\t<li><a href=\"https://dschloe.github.io/python/tensorflow2.0/ch9_1_auto_encoder/\" target='_blank'  rel=\"noopener noreferrer\" >Tensorflow 2.0 Tutorial ch9.1-2 - 오토인코더 & MNIST</a></li>\r\n\t\t\t\t<li><a href=\"https://dschloe.github.io/python/tensorflow2.0/ch9_3_k_means_clustering/\" target='_blank'  rel=\"noopener noreferrer\" >Tensorflow 2.0 Tutorial ch9.3 - 클러스터링</a></li>\r\n\t\t\t\t<li><a href=\"https://dschloe.github.io/python/tensorflow2.0/ch9_4_super_resolution/\" target='_blank'  rel=\"noopener noreferrer\" >Tensorflow 2.0 Tutorial ch9.4 - 초해상도</a></li>\r\n\t\t\t\t<li><a href=\"https://dschloe.github.io/python/tensorflow2.0/ch9_5_image_segmentation/\" target='_blank'  rel=\"noopener noreferrer\" >Tensorflow 2.0 Tutorial ch9.5 - 이미지 분할</a></li>\r\n\t\t\t</ul>\r\n\t\t\t\t\r\n\t\t\t<hr className='class-1'/>\r\n\t\t\t<img src=\"../images/AI/46.PNG\" width={'200'} alt=''/>\r\n\t\t\t<ul>\r\n\t\t\t\t<li><a href=\"https://thebook.io/080324/0001/\" target='_blank'  rel=\"noopener noreferrer\" >모두의 딥러닝</a></li>\r\n\t\t\t\t<li><a href=\"https://github.com/gilbutITbook/080324\" target='_blank'  rel=\"noopener noreferrer\" >모두의 딥러닝 개정 3판 Github</a></li>\t\r\n\t\t\t</ul>\r\n\r\n\r\n\t\t\t<hr className='class-1'/>\t\t\t\t\t\r\n\t\t\t<img src=\"../images/AI/81.PNG\" width={'200'} alt=''/>\r\n\t\t\t<ul>\r\n\t\t\t\t<li><a href=\"https://wikidocs.net/book/2788\" target='_blank'  rel=\"noopener noreferrer\" ><b>PyTorch로 시작하는 딥 러닝 입문(유원준, 안상준)</b></a></li>\r\n\t\t\t\t<li><a href=\"https://github.com/jerife/DeepLearning-Starting-With-Pytorch\" target='_blank'  rel=\"noopener noreferrer\" >github : PyTorch로 시작하는 딥 러닝 입문</a></li>\r\n\t\t\t</ul>\t\t\r\n\t\t\t\t\r\n\t\t\t<hr className='class-1'/>\t\t\t\t\t\r\n\t\t\t<img src=\"../images/AI/16.PNG\" width={'200'} alt=''/>\r\n\t\t\t<ul>\r\n\t\t\t\t<li><a href=\"https://wikidocs.net/book/2155\" target='_blank'  rel=\"noopener noreferrer\" ><b>딥 러닝을 이용한 자연어 처리 입문(유원준, 안상준 Wikidocs)</b></a></li>\r\n\t\t\t\t<li><a href=\"https://github.com/ukairia777/tensorflow-nlp-tutorial\" target='_blank'  rel=\"noopener noreferrer\" >github : 딥 러닝을 이용한 자연어 처리 입문</a></li>\r\n\t\t\t</ul>\t\t\r\n\t\t\t\t\r\n\t\t\t<hr className='class-1'/>\t\t\t\t\t\r\n\t\t\t<img src=\"../images/AI/86.PNG\" width={'200'} alt=''/>\r\n\t\t\t<ul>\r\n\t\t\t\t<li><a href=\"https://tykimos.github.io/lecture/\" target='_blank'  rel=\"noopener noreferrer\" ><b>블록과 함께 하는 파이썬 딥러닝 케라스(김태영)</b></a></li>\r\n\t\t\t\t<li><a href=\"https://github.com/tykimos?tab=repositories\" target='_blank'  rel=\"noopener noreferrer\" >github : 김태영</a></li>\r\n\r\n\t\t\t</ul>\t\t\r\n\t\t\t\t\r\n\t\t\t<hr className='class-1'/>\t\t\t\t\t\r\n\t\t\t<img src=\"../images/AI/88.PNG\" width={'200'} alt=''/>\r\n\t\t\t<ul>\r\n\t\t\t\t<li><a href=\"https://wikidocs.net/book/587\" target='_blank'  rel=\"noopener noreferrer\" >Machine Learning 강의노트</a></li>\r\n\r\n\t\t\t</ul>\t\t\r\n\t\t\t\t\r\n\t\t\t<hr className='class-1'/>\t\t\t\t\t\r\n\t\t\t<img src=\"../images/AI/87.PNG\" width={'200'} alt=''/>\r\n\t\t\t<ul>\r\n\t\t\t\t<li><a href=\"https://subinium.github.io/Keras/\" target='_blank'  rel=\"noopener noreferrer\" >케라스 창시자에게 배우는 딥러닝 2판</a></li>\r\n\t\t\t\t<li><a href=\"https://github.com/rickiepark/deep-learning-with-python-notebooks\" target='_blank'  rel=\"noopener noreferrer\" >github </a></li>\r\n\t\t\t</ul>\t\t\r\n\r\n\t\t\t<hr className='class-1'/>\r\n\t\t\t<ul>\r\n\t\t\t\t<li><a href=\"https://julien-vitay.net/lecturenotes-neurocomputing/1-intro/1-Introduction.html\" target='_blank'  rel=\"noopener noreferrer\" >NeuroComputing</a></li>\r\n\t\t\t\t\r\n\t\t\t\t<li><a href=\"https://dschloe.github.io/python/python_edu/04_machinelearning/chapter_4_4_classification_iris_example/\" target='_blank'  rel=\"noopener noreferrer\" >입문자를 위한 머신러닝 분류 튜토리얼 - IRIS 분류</a></li>\r\n\t\t\t\t<li><a href=\"https://softtone-someday.tistory.com/11\" target='_blank'  rel=\"noopener noreferrer\" >[Tensorflow] 간단한 인공지능 모델 생성 및 확인</a></li>\r\n\t\t\t\t<li><a href=\"https://github.com/WegraLee/deep-learning-from-scratch\" target='_blank'  rel=\"noopener noreferrer\" >밑바닥부터 시작하는 딥러닝</a></li>\r\n\t\t\t\t<li><a href=\"https://github.com/rickiepark/deep-learning-with-javascript\" target='_blank'  rel=\"noopener noreferrer\" >구글 브레인 팀에게 배우는 딥러닝</a></li>\r\n\t\t\t\t<li><a href=\"https://bbongcol.github.io/deep-learning-bookmarks/\" target='_blank'  rel=\"noopener noreferrer\" >Deep Learning Guide</a></li>\r\n\t\t\t\t<li><a href=\"https://aka.ms/ml-beginners?WT.mc_id=academic-105485-koreyst\" target='_blank'  rel=\"noopener noreferrer\" >초보자를 위한 ML</a></li>\r\n\t\t\t\t<li><a href=\"https://github.com/microsoft/Data-Science-For-Beginners\" target='_blank'  rel=\"noopener noreferrer\" >초보자를 위한 데이터 과학</a></li>\r\n\t\t\t\t<li><a href=\"https://github.com/microsoft/ai-for-beginners\" target='_blank'  rel=\"noopener noreferrer\" >초보자를 위한 AI</a></li>\r\n\t\t\t\t<li><a href=\"https://github.com/microsoft/Web-Dev-For-Beginners?WT.mc_id=academic-0000-abartolo\" target='_blank'  rel=\"noopener noreferrer\" >초보자를 위한 웹 개발</a></li>\r\n\t\t\t\t<li><a href=\"https://github.com/microsoft/IoT-For-Beginners\" target='_blank'  rel=\"noopener noreferrer\" >초보자를 위한 IoT</a></li>\r\n\t\t\t\t<li><a href=\"https://github.com/microsoft/xr-development-for-beginners?WT.mc_id=academic-105485-koreyst\" target='_blank'  rel=\"noopener noreferrer\" >초보자를 위한 확장 현실(XR)</a></li>\r\n\t\t\t\t<li><a href=\"https://github.com/microsoft/ML-For-Beginners?WT.mc_id=academic-105485-koreyst\" target='_blank'  rel=\"noopener noreferrer\" >ML-For-Beginners</a></li>\r\n\t\t\t\t<li><a href=\"\" target='_blank'  rel=\"noopener noreferrer\" ></a></li>\r\n\t\t\t\t<li><a href=\"\" target='_blank'  rel=\"noopener noreferrer\" ></a></li>\r\n\t\t\t\t<li><a href=\"\" target='_blank'  rel=\"noopener noreferrer\" ></a></li>\r\n\t\t\t\t<li><a href=\"\" target='_blank'  rel=\"noopener noreferrer\" ></a></li>\r\n\t\t\t\t<li><a href=\"\" target='_blank'  rel=\"noopener noreferrer\" ></a></li>\r\n\t\t\t</ul>\r\n\t\t\t\r\n\t\t</>\r\n\t);\r\n}\t\r\n","import React from 'react';\nimport { Routes, Route } from 'react-router-dom';\n\nimport Layout from './Layout';\nimport Home from '../pages/Home';\nimport About from '../pages/AI/About';\nimport WebDesign from '../pages/WebDesign';\nimport SEO from '../pages/SEO';\nimport Services from '../pages/Services';\nimport Frontend from '../pages/Frontend';\nimport PHP from '../pages/PHP';\nimport Node from '../pages/Node';\nimport AboutWho from '../pages/AboutWho';\nimport OurValues from '../pages/OurValues';\nimport WebDev from '../pages/WebDev';\n\n// Lecture\nimport Intro from '../pages/Lecture/Intro/intro';\nimport ML from '../pages/Lecture/ML/ml';\nimport DL_1 from '../pages/Lecture/DL/dl_1';\nimport DL_2 from '../pages/Lecture/DL/dl_2';\nimport DL_3 from '../pages/Lecture/DL/dl_3';\n\n//AI\nimport AI from '../pages/AI/ai';\nimport CH1 from '../pages/AI/ch1';\n\n// Program\nimport P1_Basics_of_MLP from '../pages/Programs/MLP/P1_Basics_of_MLP';\nimport P1_1_regression from '../pages/Programs/MLP/P1_1_regression';\n\n// NeuroComputing\nimport Ch1_1 from '../pages/neurocomputing/ch1/ch1_1';\nimport Ch1_2 from '../pages/neurocomputing/ch1/ch1_2';\nimport Ch1_3 from '../pages/neurocomputing/ch1/ch1_3';\nimport Ch2_1 from '../pages/neurocomputing/ch2/ch2_1';\nimport Ch2_2 from '../pages/neurocomputing/ch2/ch2_2';\nimport Ch2_3 from '../pages/neurocomputing/ch2/ch2_3';\n\n// Ref\nimport AI_Ref from '../pages/AI/ai_ref';\n\n\nconst App = () => {\n  return (\n    <>\n      <Routes>\n        <Route path=\"/\" element={<Layout />}>\n          <Route index element={<Home />} />\n          <Route path=\"/AI/about\" element={<About />} />\n          <Route path=\"services\" element={<Services />} />\n          <Route path=\"web-design\" element={<WebDesign />} />\n          <Route path=\"web-dev\" element={<WebDev />} />\n          <Route path=\"frontend\" element={<Frontend />} />\n          <Route path=\"node\" element={<Node />} />\n          <Route path=\"seo\" element={<SEO />} />\n          <Route path=\"php\" element={<PHP />} />\n          <Route path=\"who-we-are\" element={<AboutWho />} />\n          <Route path=\"our-values\" element={<OurValues />} />\n          <Route path=\"*\" element={<h1>Not found!</h1>} />\n\n          {/* Lectire */}          \n          <Route path='/Lecture/Intro/intro' element={<Intro />} />\n          <Route path='/Lecture/ML/ml' element={<ML/>} />\n          <Route path='/Lecture/DL/dl_1' element={<DL_1 />} />\n          <Route path='/Lecture/DL/dl_2' element={<DL_2 />} />\n          <Route path='/Lecture/DL/dl_3' element={<DL_3 />} />\n\n          {/* AI */}\n          <Route path=\"/AI/ai\" element={<AI />} />\n          <Route path='/AI/ai_ref' element={<AI_Ref />} />\n          <Route path='/AI/ch1' element={<CH1 />} />\n\n          {/* Program */}\n          <Route path='/Programs/MLP/P1_Basics_of_MLP' element={<P1_Basics_of_MLP />} />\n          <Route path='/Programs/MLP/P1_1_regression' element={<P1_1_regression />} />\n\n\n          {/* NeuroComputing */}\n          <Route path='/neurocomputing/ch1/ch1_1' element={<Ch1_1 />} />\n          <Route path='/neurocomputing/ch1/ch1_2' element={<Ch1_2 />} />\n          <Route path='/neurocomputing/ch1/ch1_3' element={<Ch1_3 />} />\n          <Route path='/neurocomputing/ch2/ch2_1' element={<Ch2_1 />} />\n          <Route path='/neurocomputing/ch2/ch2_2' element={<Ch2_2 />} />\n          <Route path='/neurocomputing/ch2/ch2_3' element={<Ch2_3 />} />\n\n        </Route>\n      </Routes>\n    </>\n  );\n};\n\nexport default App;\n","import React  from 'react';\n\nimport ReactDOM from 'react-dom/client';\nimport App from './components/App';\n// import App from './App';\nimport { BrowserRouter } from 'react-router-dom';\n\n\n// styles\nimport './styles/App.css';\nimport './styles/styles.css';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n    <BrowserRouter basename={process.env.PUBLIC_URL}>\n      <App />\n    </BrowserRouter>\n  </React.StrictMode>\n);\n// route 설명: https://velog.io/@gene028/React"],"sourceRoot":""}